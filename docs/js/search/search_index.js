var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AwsXrayPropagatorModule.html",[0,1.285,1,2.416]],["body/modules/AwsXrayPropagatorModule.html",[1,4.164,2,1.557,3,0.336,4,0.336,5,0.259,6,0.259,7,3.863,8,4.45,9,3.489,10,2.942,11,0.33,12,0.023,13,2.214,14,0.336,15,2.35,16,1.97,17,3.807,18,3.191,19,2.729,20,1.855,21,1.97,22,1.855,23,1.096,24,1.97,25,0.336,26,0.797,27,0.019,28,0.019]],["title/injectables/AwsXrayPropagatorService.html",[17,2.209,29,0.671]],["body/injectables/AwsXrayPropagatorService.html",[3,0.309,4,0.309,5,0.238,6,0.293,7,4.381,8,4.601,9,3.957,11,0.332,12,0.023,14,0.309,16,1.811,17,4.096,18,2.934,25,0.309,26,0.733,27,0.018,28,0.018,29,1.099,30,1.811,31,2.51,32,0.836,33,0.784,34,1.573,35,3.504,36,1.203,37,4.711,38,1.023,39,6.88,40,1.275,41,3.599,42,2.234,43,1.275,44,3.208,45,1.811,46,1.811,47,1.608,48,0.784]],["title/interfaces/B3PropagatorConfig.html",[49,0.63,50,1.364]],["body/interfaces/B3PropagatorConfig.html",[3,0.166,4,0.166,5,0.128,6,0.128,11,0.255,12,0.023,14,0.166,23,0.541,25,0.442,27,0.012,28,0.012,32,0.449,33,0.421,38,0.393,43,0.685,48,0.946,49,1.077,50,2.267,51,0.916,52,1.1,53,1.1,54,1.779,55,1.152,56,1.096,57,2.346,58,2.44,59,0.574,60,2.066,61,2.186,62,1.648,63,1.55,64,1.744,65,1.941,66,1.76,67,1.221,68,1.86,69,1.86,70,1.86,71,1.86,72,1.1,73,1.86,74,1.255,75,1.1,76,1.76,77,1.1,78,1.1,79,0.916,80,1.255,81,1.174,82,1.1,83,1.373,84,1.76,85,0.541,86,0.972,87,0.763,88,1.55,89,1.174,90,0.972,91,1.255,92,1.174,93,1.76,94,1.749,95,2.356,96,1.55,97,1.034,98,1.255,99,1.255,100,1.76,101,1.55,102,1.034,103,1.034,104,1.162,105,1.1,106,1.174,107,1.55,108,1.174,109,1.255,110,1.944,111,2.112,112,1.174,113,2.112,114,1.174,115,1.174,116,1.174,117,1.65,118,1.76,119,1.174,120,1.174,121,1.1,122,1.174,123,1.174,124,1.174,125,1.174,126,1.034,127,1.1,128,1.174,129,1.174,130,1.1,131,1.174,132,1.1,133,1.034,134,1.55,135,1.944,136,1.255,137,1.831,138,2.066,139,1.174,140,1.174,141,1.174,142,1.1,143,1.174,144,1.034,145,0.685,146,1.174,147,0.972,148,1.174,149,1.1,150,0.972,151,1.55,152,1.174,153,1.255,154,2.213,155,0.863,156,1.1,157,1.86,158,1.98,159,1.174,160,1.174,161,1.174,162,2.199,163,1.76,164,1.174,165,1.255,166,1.255,167,1.174,168,1.174,169,1.096,170,1.55,171,1.65,172,1.65,173,1.553,174,1.466,175,1.373,176,2.082,177,1.174,178,1.458,179,1.174,180,0.972,181,1.174,182,0.972,183,1.174,184,0.972,185,1.174,186,0.972,187,0.916,188,0.863,189,2.213,190,1.1,191,1.76,192,1.55,193,1.76,194,1.295,195,1.55,196,1.174]],["title/modules/B3PropagatorModule.html",[0,1.285,197,2.416]],["body/modules/B3PropagatorModule.html",[2,1.567,3,0.338,4,0.338,5,0.26,6,0.26,10,2.962,11,0.331,12,0.023,13,2.223,14,0.338,15,2.36,16,1.983,19,2.748,20,1.868,21,1.983,22,1.868,23,1.103,24,1.983,25,0.338,26,0.802,27,0.019,28,0.019,197,4.18,198,3.889,199,3.513,200,3.823,201,3.513]],["title/injectables/B3PropagatorService.html",[29,0.671,200,2.209]],["body/injectables/B3PropagatorService.html",[3,0.231,4,0.231,5,0.178,6,0.311,11,0.311,12,0.023,14,0.231,16,1.353,25,0.231,26,0.548,27,0.015,28,0.015,29,0.909,30,1.353,31,1.875,32,0.972,33,0.585,34,1.301,35,3.134,36,1.502,38,1.012,40,1.301,41,3.281,42,1.848,43,0.953,44,2.397,45,1.353,46,1.353,47,1.202,48,0.585,50,2.547,54,1.379,55,1.461,56,1.158,58,2.23,59,1.243,60,2.598,61,2.444,62,2.399,63,2.517,65,2.008,67,1.548,85,1.028,169,1.531,173,1.009,174,1.592,198,4.643,199,4.194,200,3.664,201,2.397,202,2.994,203,3.274,204,4.094,205,3.387,206,4.127,207,4.807,208,2.382,209,2.021,210,4.807,211,1.964,212,4.807,213,3.519,214,2.761,215,2.994,216,4.127,217,6.158,218,3.519,219,1.747,220,1.747,221,2.386,222,2.397,223,3.519,224,3.519,225,3.519,226,3.519,227,3.519,228,3.519]],["title/interfaces/BatchSpanProcessorConfig.html",[49,0.63,110,1.364]],["body/interfaces/BatchSpanProcessorConfig.html",[3,0.159,4,0.159,5,0.122,6,0.122,11,0.25,12,0.023,14,0.159,23,0.518,25,0.444,27,0.011,28,0.011,32,0.43,33,0.403,38,0.377,43,0.656,48,0.931,49,1.063,50,2.044,51,0.878,52,1.055,53,1.055,54,1.758,55,1.116,56,1.477,57,1.125,58,2.503,59,1.123,60,1.501,61,1.705,62,1.33,63,0.991,64,1.593,65,1.815,66,1.125,67,0.781,68,1.813,69,1.813,70,1.813,71,1.813,72,1.055,73,1.813,74,1.203,75,1.055,76,1.705,77,1.055,78,1.055,79,0.878,80,1.203,81,1.125,82,1.055,83,1.33,84,1.705,85,0.518,86,0.932,87,0.739,88,1.501,89,1.125,90,0.932,91,1.203,92,1.125,93,1.705,94,1.705,95,2.314,96,1.501,97,0.991,98,1.203,99,1.203,100,1.705,101,1.501,102,0.991,103,0.991,104,1.133,105,1.055,106,1.125,107,1.501,108,1.125,109,1.824,110,2.044,111,2.468,112,1.705,113,2.597,114,1.705,115,1.705,116,1.705,117,2.435,118,2.059,119,1.705,120,1.705,121,2.153,122,1.705,123,1.705,124,1.705,125,1.705,126,1.501,127,2.153,128,1.705,129,1.705,130,1.598,131,1.705,132,2.153,133,0.991,134,1.501,135,1.902,136,1.203,137,1.792,138,2.022,139,1.125,140,1.125,141,1.125,142,1.055,143,1.125,144,0.991,145,0.656,146,1.125,147,0.932,148,1.125,149,1.055,150,0.932,151,1.501,152,1.125,153,1.203,154,2.173,155,0.828,156,1.055,157,1.813,158,1.93,159,1.125,160,1.125,161,1.125,162,2.153,163,1.705,164,1.125,165,1.203,166,1.203,167,1.125,168,1.125,169,1.068,170,1.501,171,1.598,172,1.598,173,1.525,174,1.439,175,1.33,176,2.044,177,1.125,178,1.412,179,1.125,180,0.932,181,1.125,182,0.932,183,1.125,184,0.932,185,1.125,186,0.932,187,0.878,188,0.828,189,2.173,190,1.055,191,1.705,192,1.501,193,1.705,194,1.254,195,1.501,196,1.125]],["title/interfaces/CommonCollectorConfig.html",[49,0.63,83,1.285]],["body/interfaces/CommonCollectorConfig.html",[3,0.154,4,0.154,5,0.118,6,0.118,11,0.246,12,0.023,14,0.154,23,0.502,25,0.436,27,0.011,28,0.011,32,0.417,33,0.39,38,0.365,43,0.635,48,0.919,49,1.052,50,2.015,51,0.85,52,1.021,53,1.021,54,1.742,55,1.089,56,1.558,57,1.089,58,2.442,59,1.305,60,1.465,61,1.672,62,1.298,63,0.959,64,1.567,65,1.789,66,1.089,67,0.756,68,1.777,69,1.777,70,1.777,71,1.777,72,1.021,73,1.777,74,1.165,75,1.021,76,2.259,77,1.021,78,1.021,79,0.85,80,1.165,81,1.089,82,1.559,83,1.575,84,2.565,85,0.766,86,1.378,87,0.979,88,2.258,89,1.663,90,1.378,91,1.779,92,1.663,93,2.259,94,2.279,95,2.815,96,2.258,97,1.465,98,1.779,99,1.779,100,2.565,101,1.989,102,1.465,103,1.465,104,1.243,105,2.117,106,1.663,107,1.777,108,2.259,109,1.165,110,1.871,111,2.018,112,1.089,113,2.018,114,1.089,115,1.089,116,1.089,117,1.559,118,1.663,119,1.089,120,1.089,121,1.021,122,1.089,123,1.089,124,1.089,125,1.089,126,0.959,127,1.021,128,1.089,129,1.089,130,1.021,131,1.089,132,1.021,133,0.959,134,1.465,135,1.871,136,1.165,137,1.762,138,1.989,139,1.089,140,1.089,141,1.089,142,1.021,143,1.089,144,0.959,145,0.635,146,1.089,147,0.902,148,1.089,149,1.021,150,0.902,151,1.465,152,1.089,153,1.165,154,2.142,155,0.801,156,1.021,157,1.777,158,1.892,159,1.089,160,1.089,161,1.089,162,2.117,163,1.663,164,1.089,165,1.165,166,1.165,167,1.089,168,1.089,169,1.047,170,1.465,171,1.559,172,1.559,173,1.503,174,1.419,175,1.298,176,2.015,177,1.089,178,1.378,179,1.089,180,0.902,181,1.089,182,0.902,183,1.089,184,0.902,185,1.089,186,0.902,187,0.85,188,0.801,189,2.142,190,1.021,191,1.663,192,1.465,193,1.663,194,1.224,195,1.465,196,1.089]],["title/modules/CompositePropagatorModule.html",[0,1.285,229,2.416]],["body/modules/CompositePropagatorModule.html",[2,1.567,3,0.338,4,0.338,5,0.26,6,0.26,10,2.962,11,0.331,12,0.023,13,2.223,14,0.338,15,2.36,16,1.983,19,2.748,20,1.868,21,1.983,22,1.868,23,1.103,24,1.983,25,0.338,26,0.802,27,0.019,28,0.019,229,4.18,230,3.889,231,3.889,232,4.18,233,3.889]],["title/injectables/CompositePropagatorService.html",[29,0.671,232,2.416]],["body/injectables/CompositePropagatorService.html",[3,0.26,4,0.26,5,0.2,6,0.293,8,3.542,9,2.696,11,0.343,12,0.023,14,0.26,16,1.522,17,4.175,18,2.466,19,3.286,25,0.26,26,0.616,27,0.016,28,0.016,29,0.984,30,1.522,31,2.109,32,0.703,33,0.659,34,1.408,35,3.286,36,1.328,38,0.96,40,1.072,41,3.413,42,2,43,1.072,45,1.522,46,1.522,47,1.352,48,0.659,56,0.954,59,0.899,85,0.847,87,1.241,199,2.696,200,4.096,201,2.696,205,3.286,208,2.684,211,1.618,219,1.965,230,4.38,231,4.38,232,4.201,234,3.959,235,4.175,236,4.175,237,3.959,238,3.959,239,6.576,240,2.696,241,3.372,242,2.771,243,2.696,244,2.274,245,2.263,246,2.696,247,3.959,248,3.959,249,3.959,250,3.959,251,3.372,252,3.959,253,3.959,254,3.959,255,3.959]],["title/modules/ConsoleSpanExporterModule.html",[0,1.285,256,2.416]],["body/modules/ConsoleSpanExporterModule.html",[2,1.564,3,0.337,4,0.337,5,0.26,6,0.26,11,0.33,12,0.023,13,2.22,14,0.337,20,1.864,21,1.979,22,1.864,23,1.1,24,1.979,25,0.337,26,0.801,27,0.019,28,0.019,94,1.979,104,1.565,256,4.175,257,3.88,258,3.505,259,4.175,260,3.505,261,2.667,262,2.555]],["title/injectables/ConsoleSpanExporterService.html",[29,0.671,259,2.416]],["body/injectables/ConsoleSpanExporterService.html",[3,0.311,4,0.311,5,0.239,6,0.294,11,0.319,12,0.023,14,0.311,25,0.311,26,0.737,27,0.018,28,0.018,29,1.103,30,1.822,32,0.841,33,0.788,34,1.579,36,1.211,38,1.026,40,1.283,45,1.822,46,1.822,47,1.618,48,0.788,64,1.878,87,0.954,104,1.683,145,1.579,257,4.398,259,4.489,262,2.353,263,2.952,264,4.105,265,4.037,266,4.97,267,4.215,268,2.538,269,2.525,270,2.525]],["title/interfaces/CustomSpan.html",[49,0.63,79,1.285]],["body/interfaces/CustomSpan.html",[3,0.29,4,0.29,5,0.223,6,0.282,11,0.282,12,0.023,25,0.29,27,0.017,28,0.017,32,0.992,33,0.736,34,1.513,36,1.131,40,1.198,43,1.198,47,1.908,49,1.178,51,1.603,56,1.066,59,1.005,79,2.024,85,0.947,103,2.629,104,1.842,211,1.809,221,3.041,271,4.76,272,3.771,273,4.76,274,4.214,275,3.609,276,4.007,277,4.76,278,4.851,279,5.108,280,5.108,281,4.851,282,4.427,283,4.76,284,4.76,285,3.015]],["title/interfaces/IExporter.html",[49,0.63,268,1.543]],["body/interfaces/IExporter.html",[3,0.316,4,0.316,5,0.243,6,0.297,11,0.297,12,0.023,14,0.316,25,0.386,27,0.018,28,0.018,32,0.856,33,0.802,34,1.595,36,1.231,38,0.75,40,1.305,48,0.802,49,1.13,51,1.746,64,1.898,72,2.097,87,0.97,145,1.841,175,1.746,176,1.853,214,3.384,261,2.097,264,4.129,267,4.363,268,2.564,269,2.568,270,2.568,286,3.634,287,4.82,288,4.443,289,5.892,290,4.105]],["title/interfaces/IPropagator.html",[42,1.364,49,0.63]],["body/interfaces/IPropagator.html",[3,0.32,4,0.32,5,0.246,6,0.3,11,0.3,12,0.023,14,0.32,15,1.877,25,0.389,27,0.018,28,0.018,32,0.867,33,0.812,34,1.607,35,3.548,36,1.247,38,0.76,40,1.321,41,3.41,42,2.283,43,1.321,48,0.812,49,1.136,51,1.768,72,2.124,155,2.33,175,1.768,176,1.877,214,3.41,288,4.478,291,3.681,292,4.882,293,5.058,294,5.938,295,4.158]],["title/interfaces/IgnoreUrlsConfig.html",[49,0.63,157,1.45]],["body/interfaces/IgnoreUrlsConfig.html",[3,0.166,4,0.166,5,0.127,6,0.127,11,0.255,12,0.023,14,0.166,23,0.54,25,0.442,27,0.012,28,0.012,32,0.448,33,0.42,38,0.393,43,0.684,48,0.945,49,1.076,50,2.081,51,0.915,52,1.099,53,1.099,54,1.778,55,1.151,56,1.095,57,1.173,58,2.401,59,0.574,60,1.549,61,1.748,62,1.372,63,1.032,64,1.627,65,1.848,66,1.173,67,0.814,68,1.858,69,1.858,70,1.858,71,1.858,72,1.099,73,1.858,74,1.254,75,1.099,76,1.759,77,1.099,78,1.099,79,0.915,80,1.254,81,1.173,82,1.099,83,1.372,84,1.759,85,0.54,86,0.971,87,0.762,88,1.549,89,1.173,90,0.971,91,1.254,92,1.173,93,1.759,94,1.748,95,2.355,96,1.549,97,1.032,98,1.254,99,1.254,100,1.759,101,1.549,102,1.032,103,1.032,104,1.161,105,1.099,106,1.173,107,1.549,108,1.173,109,1.254,110,1.942,111,2.111,112,1.173,113,2.111,114,1.173,115,1.173,116,1.173,117,1.649,118,1.759,119,1.173,120,1.173,121,1.099,122,1.173,123,1.173,124,1.173,125,1.173,126,1.032,127,1.099,128,1.173,129,1.173,130,1.099,131,1.173,132,1.099,133,1.032,134,1.549,135,1.942,136,1.254,137,1.83,138,2.065,139,1.173,140,1.173,141,1.173,142,1.099,143,1.173,144,1.032,145,0.684,146,1.173,147,0.971,148,1.173,149,1.099,150,0.971,151,1.549,152,1.173,153,1.254,154,2.212,155,0.862,156,1.099,157,2.212,158,2.638,159,1.759,160,1.759,161,1.759,162,2.473,163,2.345,164,1.759,165,1.254,166,1.254,167,1.759,168,2.111,169,1.095,170,1.549,171,1.649,172,1.649,173,1.552,174,1.465,175,1.372,176,2.081,177,1.173,178,1.457,179,1.173,180,0.971,181,1.173,182,0.971,183,1.173,184,0.971,185,1.173,186,0.971,187,0.915,188,0.862,189,2.212,190,1.099,191,1.759,192,1.549,193,1.759,194,1.294,195,1.549,196,1.173,296,2.152,297,2.152]],["title/injectables/InstrumentationService.html",[29,0.671,298,2.209]],["body/injectables/InstrumentationService.html",[3,0.147,4,0.147,5,0.113,6,0.315,11,0.309,12,0.023,14,0.147,15,0.863,25,0.147,26,0.349,27,0.011,28,0.011,29,0.655,30,0.863,32,0.751,33,0.373,34,0.938,36,1.564,38,0.658,40,1.582,42,1.828,45,0.863,46,1.332,48,0.997,54,0.994,55,1.053,56,1.363,58,1.861,59,1.327,64,1.362,65,1.623,67,1.362,77,2.069,78,0.977,83,1.722,85,1.21,86,1.332,87,0.697,88,1.729,90,2.176,94,2.354,95,2.788,96,2.313,104,1.387,145,1.658,155,0.767,169,1.145,170,0.918,173,0.644,174,1.582,184,0.863,188,1.995,205,3.722,208,1.84,209,1.29,211,2.313,214,1.99,215,2.158,219,1.115,220,1.115,221,2.901,222,1.529,261,0.977,266,2.612,268,2.712,269,1.846,270,1.196,275,1.846,276,2.158,298,2.961,299,1.912,300,1.846,301,3.238,302,4.624,303,5.429,304,2.951,305,2.951,306,2.881,307,4.755,308,2.951,309,2.951,310,3.602,311,2.951,312,4.05,313,4.05,314,4.23,315,3.464,316,2.951,317,2.245,318,2.951,319,4.521,320,2.951,321,2.245,322,2.612,323,4.624,324,2.951,325,4.05,326,2.951,327,2.245,328,4.05,329,3.585,330,3.464,331,2.245,332,4.406,333,2.359,334,2.359,335,3.464,336,2.245,337,2.951,338,2.245,339,2.245,340,3.189,341,2.951,342,3.189,343,2.359,344,2.951,345,2.245,346,2.951,347,4.23,348,3.585,349,2.245,350,1.912,351,1.912,352,1.693,353,1.912,354,1.912,355,1.912,356,1.912,357,1.912,358,3.464,359,1.912,360,2.951,361,2.951,362,1.912,363,1.529,364,2.951,365,1.693,366,1.912,367,1.693,368,1.912,369,2.245,370,2.245,371,2.245,372,2.245,373,1.912,374,1.912,375,2.245,376,3.464,377,2.245,378,1.912,379,2.245,380,2.245,381,1.912,382,2.245,383,1.912,384,1.912,385,2.245,386,2.245,387,1.912,388,1.912,389,1.912,390,1.912,391,1.912,392,1.912,393,1.912,394,2.245,395,2.245,396,2.245,397,3.464,398,1.912,399,2.245,400,2.245,401,2.245]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.285,402,2.416]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.546,3,0.334,4,0.334,5,0.257,6,0.257,10,2.923,11,0.329,12,0.023,13,2.205,14,0.334,15,2.341,16,1.956,19,2.711,20,1.843,21,1.956,22,1.843,23,1.088,24,1.956,25,0.334,26,0.792,27,0.019,28,0.019,87,1.311,236,3.792,244,2.923,245,2.835,246,3.466,402,4.147,403,3.837]],["title/injectables/JaegerHttpTracePropagatorService.html",[29,0.671,236,2.209]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.264,4,0.264,5,0.203,6,0.313,11,0.333,12,0.023,14,0.264,16,1.546,25,0.264,26,0.626,27,0.016,28,0.016,29,0.994,30,1.546,31,2.143,32,0.933,33,0.669,34,1.422,35,3.307,36,1.495,38,0.966,40,1.089,41,3.431,42,2.02,43,1.089,44,2.739,45,1.546,46,1.546,47,1.373,48,0.669,55,1.597,56,0.969,58,1.903,59,1.193,62,1.903,85,0.86,87,1.373,137,1.903,156,2.547,169,1.591,173,1.153,174,1.68,205,3.118,208,2.547,209,2.31,211,1.644,219,1.997,220,1.997,221,1.997,222,2.739,236,3.865,244,2.31,245,2.969,246,4.227,306,2.739,403,4.68,404,4.476,405,4.022,406,5.484,407,2.739,408,4.022,409,4.022,410,4.022]],["title/interfaces/JaegerPropagatorConfig.html",[49,0.63,154,1.45]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.167,4,0.167,5,0.129,6,0.129,11,0.256,12,0.023,14,0.167,23,0.546,25,0.442,27,0.012,28,0.012,32,0.453,33,0.425,38,0.397,43,0.691,48,0.949,49,1.08,50,2.091,51,0.925,52,1.111,53,1.111,54,1.784,55,1.161,56,1.103,57,1.186,58,2.444,59,0.58,60,1.562,61,1.76,62,1.658,63,1.044,64,1.636,65,1.857,66,1.186,67,0.823,68,1.871,69,1.871,70,1.871,71,1.871,72,1.111,73,1.871,74,1.268,75,1.111,76,1.773,77,1.111,78,1.111,79,0.925,80,1.268,81,1.186,82,1.111,83,1.384,84,1.773,85,0.546,86,0.982,87,0.769,88,1.562,89,1.186,90,0.982,91,1.268,92,1.186,93,1.773,94,1.76,95,2.366,96,1.562,97,1.044,98,1.268,99,1.268,100,1.773,101,1.562,102,1.044,103,1.044,104,1.169,105,1.111,106,1.186,107,1.562,108,1.186,109,1.268,110,1.953,111,2.125,112,1.186,113,2.125,114,1.186,115,1.186,116,1.186,117,1.662,118,1.773,119,1.186,120,1.186,121,1.111,122,1.186,123,1.186,124,1.186,125,1.186,126,1.044,127,1.111,128,1.186,129,1.186,130,1.111,131,1.186,132,1.111,133,1.044,134,1.562,135,1.953,136,1.268,137,1.97,138,2.076,139,1.186,140,1.186,141,1.186,142,1.111,143,1.186,144,1.044,145,0.691,146,1.186,147,0.982,148,1.186,149,1.111,150,0.982,151,1.562,152,1.186,153,1.268,154,2.418,155,1.304,156,2.21,157,1.871,158,1.992,159,1.186,160,1.186,161,1.186,162,2.21,163,1.773,164,1.186,165,1.268,166,1.268,167,1.186,168,1.186,169,1.103,170,1.562,171,1.662,172,1.662,173,1.56,174,1.472,175,1.384,176,2.091,177,1.186,178,1.469,179,1.186,180,0.982,181,1.186,182,0.982,183,1.186,184,0.982,185,1.186,186,0.982,187,0.925,188,0.872,189,2.223,190,1.111,191,1.773,192,1.562,193,1.773,194,1.304,195,1.562,196,1.186]],["title/modules/NoopSpanExporterModule.html",[0,1.285,411,2.416]],["body/modules/NoopSpanExporterModule.html",[2,1.536,3,0.331,4,0.331,5,0.255,6,0.255,11,0.34,12,0.023,13,2.196,14,0.331,20,1.831,21,1.943,22,1.831,23,1.081,24,1.943,25,0.331,26,0.786,27,0.019,28,0.019,104,1.549,258,3.443,260,3.443,261,2.639,262,2.509,411,4.13,412,3.811,413,3.811,414,6.065,415,3.811,416,4.13,417,4.305]],["title/injectables/NoopSpanExporterService.html",[29,0.671,416,2.416]],["body/injectables/NoopSpanExporterService.html",[3,0.311,4,0.311,5,0.239,6,0.294,11,0.319,12,0.023,14,0.311,25,0.311,26,0.737,27,0.018,28,0.018,29,1.103,30,1.822,32,0.841,33,0.788,34,1.579,36,1.211,38,1.026,40,1.283,45,1.822,46,1.822,47,1.618,87,0.954,104,1.683,145,1.579,188,2.157,262,2.353,263,2.952,264,4.105,265,4.037,267,4.215,268,2.538,269,2.525,270,2.525,412,4.398,413,4.398,416,4.489,418,5.832]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.285,419,2.675]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.546,3,0.334,4,0.334,5,0.257,6,0.257,10,2.923,11,0.329,12,0.023,13,2.205,14,0.334,15,2.341,16,1.956,19,2.711,20,1.843,21,1.956,22,1.843,23,1.088,24,1.956,25,0.334,26,0.792,27,0.019,28,0.019,245,2.214,417,4.334,419,4.591,420,3.837,421,4.438,422,3.837,423,4.591,424,4.147]],["title/injectables/NoopTextMapPropagatorService.html",[29,0.671,424,2.416]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.311,4,0.311,5,0.24,6,0.295,11,0.319,12,0.023,14,0.311,16,1.826,25,0.311,26,0.739,27,0.018,28,0.018,29,1.104,30,1.826,31,2.531,32,0.843,33,0.79,34,1.581,35,3.514,36,1.213,38,1.026,40,1.286,41,3.608,42,2.245,43,1.286,45,1.826,46,1.826,47,1.622,187,2.452,245,2.541,420,4.403,421,4.493,422,4.403,423,4.403,424,3.977,425,5.84,426,4.75]],["title/interfaces/OpenTelemetryConfig.html",[49,0.63,169,0.854]],["body/interfaces/OpenTelemetryConfig.html",[3,0.158,4,0.158,5,0.121,6,0.121,11,0.249,12,0.023,14,0.158,23,0.515,25,0.438,27,0.011,28,0.011,32,0.427,33,0.4,38,0.374,43,0.651,48,0.928,49,1.06,50,2.437,51,0.871,52,1.047,53,1.047,54,1.713,55,1.11,56,1.566,57,1.117,58,2.379,59,1.316,60,1.493,61,1.698,62,1.323,63,0.983,64,1.587,65,1.809,66,1.117,67,0.775,68,1.804,69,1.804,70,1.804,71,1.804,72,1.047,73,1.804,74,1.195,75,1.047,76,1.695,77,1.047,78,1.047,79,0.871,80,1.195,81,1.117,82,1.047,83,1.785,84,1.695,85,0.515,86,0.925,87,0.735,88,1.493,89,1.117,90,0.925,91,1.195,92,1.117,93,1.695,94,1.698,95,2.306,96,1.493,97,0.983,98,1.195,99,1.195,100,1.695,101,1.493,102,0.983,103,0.983,104,1.128,105,1.047,106,1.117,107,1.493,108,1.117,109,1.195,110,2.398,111,2.049,112,1.117,113,2.049,114,1.117,115,1.117,116,1.117,117,1.589,118,1.695,119,1.117,120,1.117,121,1.047,122,1.117,123,1.117,124,1.117,125,1.117,126,0.983,127,1.047,128,1.117,129,1.117,130,1.047,131,1.117,132,1.047,133,0.983,134,2.015,135,1.895,136,1.195,137,1.785,138,2.015,139,1.117,140,1.117,141,1.117,142,1.047,143,1.117,144,0.983,145,0.651,146,1.117,147,0.925,148,1.117,149,1.047,150,0.925,151,2.015,152,1.117,153,1.195,154,2.591,155,0.821,156,1.047,157,2.166,158,1.921,159,1.117,160,1.117,161,1.117,162,2.599,163,1.695,164,1.117,165,1.195,166,1.195,167,1.117,168,1.117,169,1.277,170,2.28,171,2.428,172,2.428,173,1.52,174,1.435,175,1.323,176,2.038,177,1.117,178,1.404,179,1.117,180,0.925,181,1.117,182,0.925,183,1.117,184,0.925,185,1.117,186,0.925,187,0.871,188,0.821,189,2.166,190,1.047,191,1.695,192,1.493,193,1.695,194,1.247,195,1.493,196,1.117]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[427,1.761,428,2.416]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.104,4,0.104,5,0.08,6,0.31,11,0.316,12,0.023,14,0.104,15,0.611,25,0.104,26,0.523,27,0.008,28,0.008,29,0.497,32,0.826,33,0.264,34,0.711,36,1.547,38,0.802,40,1.528,42,1.501,43,0.711,45,0.611,46,1.011,47,0.543,48,0.916,49,0.467,54,1.119,55,0.799,56,1.36,58,1.217,59,1.25,62,1.413,64,1.082,65,0.897,67,1.082,75,1.698,79,2.044,81,0.738,83,1.413,85,1.142,86,1.011,87,0.529,88,1.373,90,1.894,94,1.011,96,1.074,101,1.074,102,1.373,103,1.595,104,1.653,105,1.462,117,0.692,121,0.692,127,0.692,132,0.692,137,0.952,145,1.056,147,0.611,155,1.476,169,0.94,170,0.65,173,0.456,174,1.334,176,1.79,178,1.79,180,0.611,182,0.611,187,0.952,188,1.333,194,0.543,205,3.635,208,1.698,209,0.913,211,2.106,214,2.242,215,1.637,219,0.789,220,1.305,221,2.803,240,1.083,242,1.4,245,0.692,261,0.692,266,1.982,268,1.698,269,1.4,270,0.847,273,3.324,274,2.943,275,2.08,276,2.9,278,4.91,279,4.349,280,3.259,281,3.259,285,1.083,302,3.681,304,2.239,305,2.239,308,3.324,309,3.324,310,3.324,311,2.239,312,3.324,313,3.324,316,1.354,318,1.354,319,3.511,320,2.239,322,1.982,323,3.965,324,2.239,325,3.324,326,2.239,329,2.534,332,3.511,333,3.356,334,1.79,337,2.239,340,2.534,341,2.239,342,2.534,343,1.79,344,2.239,346,2.239,348,2.943,354,1.354,355,1.354,356,1.354,357,1.354,359,1.354,360,2.239,361,2.239,362,1.354,363,1.083,364,2.239,365,1.199,367,3.511,373,1.354,374,1.354,378,1.354,381,1.354,383,2.239,384,1.354,387,1.354,388,1.354,389,1.354,390,1.354,391,1.354,392,1.354,393,1.354,398,1.354,407,1.083,415,1.199,427,1.305,428,1.79,429,1.59,430,5.225,431,1.354,432,2.239,433,3.903,434,2.628,435,3.36,436,2.862,437,2.628,438,5.153,439,2.628,440,2.628,441,2.628,442,2.239,443,2.628,444,1.59,445,1.59,446,1.59,447,3.324,448,2.628,449,2.628,450,2.239,451,2.628,452,1.59,453,2.239,454,2.628,455,1.59,456,1.59,457,2.628,458,2.239,459,1.59,460,1.59,461,1.59,462,1.59,463,3.903,464,1.59,465,2.628,466,1.982,467,1.4,468,3.36,469,1.59,470,1.59,471,1.59,472,1.354,473,3.903,474,1.59,475,2.628,476,2.239,477,1.59,478,1.59,479,1.354,480,1.59,481,1.59,482,3.903,483,1.354,484,1.59,485,2.628,486,2.628,487,1.59,488,1.59,489,1.59,490,1.59,491,1.59,492,1.354,493,1.59,494,1.59,495,2.628,496,1.59,497,1.59,498,1.59,499,2.628,500,1.59,501,1.59,502,1.59,503,1.59,504,1.59,505,1.59,506,2.628,507,1.354,508,1.59,509,1.199,510,1.59,511,1.59,512,1.59,513,1.59,514,1.59,515,2.943,516,2.628,517,2.628,518,2.628,519,1.59,520,1.59,521,1.59,522,2.628,523,1.982,524,1.59,525,2.628,526,1.59,527,1.59,528,1.59,529,1.59,530,1.59,531,1.59,532,1.59,533,1.59,534,1.59,535,1.59,536,1.59,537,1.59,538,1.59,539,1.59,540,1.59,541,1.59,542,1.59,543,1.59,544,1.59,545,1.59,546,1.59,547,1.59,548,1.59,549,1.59,550,1.59,551,1.59,552,1.59,553,1.59,554,1.59,555,1.59,556,1.354,557,1.59,558,3.36,559,1.59,560,1.59,561,1.59,562,1.59,563,1.59,564,1.59,565,3.36,566,1.59,567,1.59,568,1.59,569,1.59,570,1.59,571,1.59,572,1.59,573,1.59,574,1.59,575,1.59,576,2.628,577,1.59,578,1.59,579,1.59,580,1.59,581,1.59,582,1.59,583,1.59,584,1.59,585,1.59]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.285,586,2.416]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.224,3,0.264,4,0.264,5,0.203,6,0.266,11,0.325,12,0.023,13,2.121,14,0.264,20,1.459,21,1.549,22,1.459,23,0.862,24,1.549,25,0.264,26,0.627,27,0.016,28,0.016,34,1.09,36,1.029,38,0.627,40,1.09,48,0.67,56,1.411,59,0.915,61,1.549,68,2.538,69,2.538,70,2.538,71,2.538,73,2.538,85,0.862,126,1.647,169,1.496,174,1.586,176,1.549,186,1.549,187,2.121,188,2,189,2.633,192,1.647,194,1.375,206,3.967,208,1.753,211,1.647,220,2,285,2.744,306,2.744,334,2.744,427,2,428,3.583,586,4.388,587,5.261,588,4.029,589,4.481,590,3.431,591,4.029,592,3.431,593,4.989,594,4.481,595,4.481,596,4.481,597,4.029,598,4.029,599,4.481,600,3.431,601,3.431,602,3.038,603,5.261,604,3.431]],["title/modules/OtelColExporterModule.html",[0,1.285,605,2.416]],["body/modules/OtelColExporterModule.html",[2,1.571,3,0.339,4,0.339,5,0.261,6,0.261,11,0.331,12,0.023,13,2.226,14,0.339,20,1.872,21,1.988,22,1.872,23,1.105,24,1.988,25,0.339,26,0.804,27,0.019,28,0.019,258,3.521,260,3.521,261,2.674,262,2.566,605,4.186,606,3.898,607,4.186,608,3.898]],["title/interfaces/OtelCollectorConfig.html",[49,0.63,134,1.45]],["body/interfaces/OtelCollectorConfig.html",[3,0.159,4,0.159,5,0.123,6,0.123,11,0.25,12,0.023,14,0.159,23,0.52,25,0.442,27,0.011,28,0.011,32,0.431,33,0.404,38,0.378,43,0.658,48,0.932,49,1.063,50,2.046,51,0.88,52,1.057,53,1.057,54,1.759,55,1.118,56,1.506,57,1.128,58,2.481,59,1.125,60,1.504,61,1.707,62,1.332,63,0.993,64,1.803,65,1.986,66,1.128,67,0.782,68,1.815,69,1.815,70,1.815,71,1.815,72,1.057,73,1.815,74,1.206,75,1.057,76,1.708,77,1.057,78,1.057,79,0.88,80,1.206,81,1.128,82,1.057,83,1.332,84,1.708,85,0.52,86,0.934,87,0.74,88,1.504,89,1.128,90,0.934,91,1.206,92,1.128,93,2.299,94,1.707,95,2.316,96,1.504,97,0.993,98,1.206,99,1.206,100,1.708,101,1.504,102,0.993,103,0.993,104,1.134,105,1.057,106,1.128,107,1.815,108,1.128,109,1.206,110,1.905,111,2.299,112,1.128,113,2.061,114,1.128,115,1.128,116,1.128,117,1.601,118,2.061,119,1.128,120,1.128,121,1.057,122,1.128,123,1.128,124,1.128,125,1.128,126,0.993,127,1.057,128,1.128,129,1.128,130,1.057,131,1.128,132,1.057,133,1.504,134,1.815,135,2.303,136,1.827,137,1.927,138,2.448,139,1.708,140,1.708,141,1.708,142,2.155,143,1.708,144,1.504,145,0.996,146,1.708,147,1.415,148,1.708,149,2.155,150,0.934,151,1.504,152,1.128,153,1.206,154,2.175,155,0.829,156,1.057,157,1.815,158,1.932,159,1.128,160,1.128,161,1.128,162,2.155,163,1.708,164,1.128,165,1.206,166,1.206,167,1.128,168,1.128,169,1.07,170,1.504,171,1.601,172,1.601,173,1.526,174,1.441,175,1.332,176,2.046,177,1.128,178,1.415,179,1.128,180,0.934,181,1.128,182,0.934,183,1.128,184,0.934,185,1.128,186,0.934,187,0.88,188,0.829,189,2.175,190,1.057,191,1.708,192,1.504,193,1.708,194,1.256,195,1.504,196,1.128]],["title/components/OtelWebTracerComponent.html",[300,1.89,609,2.209]],["body/components/OtelWebTracerComponent.html",[3,0.274,4,0.274,5,0.211,6,0.301,11,0.272,12,0.023,14,0.274,25,0.274,26,0.651,27,0.017,28,0.017,32,0.957,33,0.696,34,1.459,36,1.377,40,1.132,47,1.841,56,1.008,59,0.95,85,1.276,208,2.595,211,1.71,221,2.077,298,4.33,300,3.618,301,4.063,328,4.592,329,4.065,333,3.672,363,3.672,365,3.155,366,3.563,367,3.155,368,3.563,442,3.563,467,2.229,609,3.924,610,5.391,611,4.184,612,5.081,613,4.498,614,3.563,615,5.553,616,5.965,617,4.184,618,6.3,619,6.3,620,4.184,621,4.184,622,4.184,623,3.563,624,4.184,625,4.184,626,4.184,627,4.184,628,4.184,629,5.391,630,5.391,631,4.184,632,6.3,633,4.184,634,4.184,635,4.184]],["title/modules/OtelWebTracerModule.html",[0,1.285,636,2.209]],["body/modules/OtelWebTracerModule.html",[2,1.197,3,0.258,4,0.258,5,0.199,6,0.262,11,0.323,12,0.023,13,2.098,14,0.258,20,1.877,22,1.426,25,0.258,26,0.613,27,0.016,28,0.016,34,1.066,36,1.006,38,0.613,40,1.066,48,0.655,56,1.395,59,0.894,68,2.516,69,2.516,70,2.516,71,2.516,73,2.516,85,0.842,126,2.118,169,1.483,174,1.568,186,1.514,187,2.098,188,1.978,189,2.614,192,1.61,194,1.345,206,3.908,208,1.714,211,1.61,220,1.955,298,3.228,306,2.682,589,4.415,590,3.354,592,3.354,593,4.934,594,4.415,599,4.415,600,3.354,601,3.354,602,2.97,604,3.354,609,4.382,613,2.97,623,3.354,636,4.321,637,2.977,638,3.354,639,3.354,640,3.354,641,4.415,642,2.97,643,2.97,644,5.183,645,3.938,646,3.938,647,3.938,648,3.938]],["title/injectables/OtelcolExporterService.html",[29,0.671,607,2.416]],["body/injectables/OtelcolExporterService.html",[3,0.265,4,0.265,5,0.204,6,0.314,11,0.334,12,0.023,14,0.265,25,0.265,26,0.912,27,0.016,28,0.016,29,0.996,30,1.552,32,0.935,33,0.671,34,1.426,36,1.497,38,0.967,40,1.092,45,1.552,46,1.552,47,1.378,48,0.671,54,1.511,55,1.601,56,1.269,59,1.196,85,0.863,87,1.06,135,1.552,138,1.649,142,1.756,144,1.649,145,1.092,149,1.756,169,1.592,171,2.551,173,1.158,174,1.682,205,3.124,208,2.704,209,2.318,211,1.649,219,2.004,220,2.004,221,2.004,245,1.756,262,2.004,263,2.514,264,3.871,267,3.652,268,2.292,269,2.15,270,2.806,492,3.437,606,4.686,607,4.233,649,5.267,650,4.036,651,6.215,652,5.863,653,5.267,654,4.036,655,3.043,656,4.036,657,4.036,658,4.036,659,4.036,660,4.036,661,4.036,662,4.036]],["title/modules/W3CTraceContextPropagatorModule.html",[0,1.285,663,2.416]],["body/modules/W3CTraceContextPropagatorModule.html",[2,1.546,3,0.334,4,0.334,5,0.257,6,0.257,10,2.923,11,0.329,12,0.023,13,2.205,14,0.334,15,2.341,16,1.956,19,2.711,20,1.843,21,1.956,22,1.843,23,1.088,24,1.956,25,0.334,26,0.792,27,0.019,28,0.019,87,1.311,235,3.792,241,4.334,242,3.471,243,3.466,663,4.147,664,3.837]],["title/injectables/W3CTraceContextPropagatorService.html",[29,0.671,235,2.209]],["body/injectables/W3CTraceContextPropagatorService.html",[3,0.308,4,0.308,5,0.237,6,0.292,11,0.331,12,0.023,14,0.308,16,1.804,25,0.308,26,0.73,27,0.018,28,0.018,29,1.096,30,1.804,31,2.499,32,0.833,33,0.78,34,1.569,35,3.499,36,1.198,38,1.022,40,1.27,41,3.595,42,2.228,43,1.27,45,1.804,46,1.804,47,1.602,48,0.78,87,1.322,235,4.383,240,3.195,242,3.499,243,3.947,404,3.996,664,4.37,665,5.795]],["title/interfaces/ZipkinCollectorConfig.html",[49,0.63,151,1.45]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.165,4,0.165,5,0.127,6,0.127,11,0.254,12,0.023,14,0.165,23,0.538,25,0.441,27,0.012,28,0.012,32,0.446,33,0.418,38,0.391,43,0.681,48,0.944,49,1.075,50,2.077,51,0.911,52,1.094,53,1.094,54,1.776,55,1.148,56,1.301,57,1.167,58,2.438,59,1.145,60,1.543,61,1.744,62,1.368,63,1.028,64,1.74,65,1.937,66,1.167,67,0.81,68,1.853,69,1.853,70,1.853,71,1.853,72,1.094,73,1.853,74,1.249,75,1.094,76,1.753,77,1.094,78,1.094,79,0.911,80,1.249,81,1.167,82,1.094,83,1.368,84,1.753,85,0.538,86,0.967,87,0.76,88,1.543,89,1.167,90,0.967,91,1.249,92,1.167,93,1.753,94,1.744,95,2.351,96,1.543,97,1.028,98,1.249,99,1.249,100,1.753,101,1.543,102,1.028,103,1.028,104,1.158,105,1.094,106,1.167,107,1.543,108,1.167,109,1.249,110,1.938,111,2.105,112,1.167,113,2.105,114,1.167,115,1.167,116,1.167,117,1.643,118,1.753,119,1.167,120,1.167,121,1.094,122,1.167,123,1.167,124,1.167,125,1.167,126,1.028,127,1.094,128,1.167,129,1.167,130,1.094,131,1.167,132,1.094,133,1.028,134,1.543,135,2.328,136,1.249,137,1.957,138,2.474,139,1.167,140,1.167,141,1.167,142,1.094,143,1.167,144,1.028,145,0.681,146,1.167,147,0.967,148,1.167,149,1.094,150,1.452,151,1.853,152,1.753,153,1.249,154,2.208,155,0.859,156,1.094,157,1.853,158,1.973,159,1.167,160,1.167,161,1.167,162,2.193,163,1.753,164,1.167,165,1.249,166,1.249,167,1.167,168,1.167,169,1.092,170,1.543,171,1.643,172,1.643,173,1.55,174,1.462,175,1.368,176,2.077,177,1.167,178,1.452,179,1.167,180,0.967,181,1.167,182,0.967,183,1.167,184,0.967,185,1.167,186,0.967,187,0.911,188,0.859,189,2.208,190,1.094,191,1.753,192,1.543,193,1.753,194,1.289,195,1.543,196,1.167,666,3.777]],["title/modules/ZipkinExporterModule.html",[0,1.285,667,2.416]],["body/modules/ZipkinExporterModule.html",[2,1.571,3,0.339,4,0.339,5,0.261,6,0.261,11,0.331,12,0.023,13,2.226,14,0.339,20,1.872,21,1.988,22,1.872,23,1.105,24,1.988,25,0.339,26,0.804,27,0.019,28,0.019,150,1.988,258,3.521,260,3.521,261,2.674,262,2.566,667,4.186,668,3.898,669,4.186]],["title/injectables/ZipkinExporterService.html",[29,0.671,669,2.416]],["body/injectables/ZipkinExporterService.html",[3,0.27,4,0.27,5,0.208,6,0.316,11,0.327,12,0.023,14,0.27,25,0.27,26,0.921,27,0.017,28,0.017,29,1.009,30,1.583,32,0.947,33,0.685,34,1.444,36,1.512,38,0.974,40,1.114,45,1.583,46,1.583,47,1.405,48,0.685,55,1.621,56,0.991,59,1.211,85,0.88,87,0.828,135,1.583,138,1.682,150,1.583,169,1.601,172,2.944,173,1.18,174,1.695,205,3.153,208,2.575,209,2.364,211,1.682,219,2.043,220,2.043,221,2.043,222,2.803,262,2.043,263,2.563,264,3.9,267,4.04,268,2.321,269,2.193,270,2.193,655,3.104,668,4.721,669,4.265,670,5.335,671,4.116,672,5.919,673,5.335,674,5.335,675,5.919,676,4.116,677,4.116,678,4.116,679,4.116]],["title/changelog.html",[680,1.848,681,1.848,682,2.527]],["body/changelog.html",[5,0.194,11,0.098,12,0.01,18,1.207,27,0.01,28,0.01,38,0.302,48,0.73,54,1.374,60,1.262,61,1.187,62,0.702,63,1.262,64,0.624,65,0.662,67,1.964,85,0.823,87,0.39,90,0.745,93,0.9,97,1.793,101,0.792,102,0.792,104,1.12,107,1.262,110,1.187,130,0.843,133,1.572,135,0.745,137,0.702,144,0.792,145,0.836,147,0.745,150,0.745,155,1.498,158,0.843,162,0.843,174,1.041,175,0.702,194,1.742,195,0.792,202,1.207,233,2.901,242,2.05,244,1.773,245,1.674,275,3.669,276,1.923,300,1.033,301,2.988,319,1.462,322,1.462,352,1.462,406,1.651,407,2.103,427,1.91,450,1.651,466,1.462,467,2.719,483,1.651,509,1.462,523,2.901,608,3.308,637,1.113,642,1.462,682,3.277,683,1.938,684,1.938,685,1.462,686,1.938,687,1.938,688,4.318,689,1.938,690,1.938,691,3.277,692,3.848,693,4.791,694,5.557,695,1.938,696,6.887,697,6.887,698,1.938,699,1.938,700,1.938,701,5.353,702,4.791,703,3.087,704,3.847,705,6.759,706,3.087,707,1.938,708,1.938,709,5.557,710,3.087,711,1.938,712,5.103,713,4.559,714,3.087,715,5.353,716,4.347,717,1.938,718,3.087,719,4.791,720,1.938,721,1.938,722,2.988,723,1.938,724,1.938,725,3.847,726,1.938,727,1.938,728,3.087,729,5.87,730,1.938,731,3.847,732,1.938,733,6.099,734,1.938,735,3.847,736,4.387,737,3.087,738,1.651,739,1.938,740,1.938,741,5.557,742,1.938,743,3.087,744,1.938,745,2.629,746,1.938,747,1.938,748,1.938,749,3.087,750,1.938,751,1.938,752,1.938,753,1.938,754,1.938,755,6.524,756,1.938,757,1.651,758,1.938,759,2.328,760,1.938,761,1.938,762,3.277,763,3.847,764,1.938,765,4.791,766,1.938,767,1.938,768,4.347,769,1.938,770,3.847,771,3.087,772,1.938,773,1.938,774,1.938,775,3.087,776,1.938,777,1.938,778,1.938,779,1.938,780,3.847,781,1.462,782,1.651,783,4.791,784,1.938,785,5.353,786,1.938,787,1.938,788,1.938,789,1.938,790,1.938,791,1.938,792,1.938,793,1.938,794,1.938,795,1.938,796,1.938,797,1.938,798,1.938,799,1.938,800,1.938,801,3.087,802,1.651,803,1.938,804,1.938,805,1.938,806,1.938,807,4.387,808,1.938,809,1.938,810,3.087,811,1.651,812,1.462,813,1.938,814,3.087,815,1.938,816,1.938,817,1.938,818,1.938,819,1.462,820,1.651,821,1.938,822,3.847,823,1.938,824,1.938,825,1.938,826,1.938,827,1.938,828,1.938,829,1.938,830,1.938,831,3.087,832,3.847,833,1.938,834,3.847,835,1.938,836,1.938,837,1.938,838,1.938,839,1.938,840,3.087,841,1.938,842,1.938,843,3.087,844,2.328,845,1.938,846,1.938,847,3.087,848,6.524,849,1.651,850,1.938,851,1.938,852,1.938,853,1.938,854,3.847,855,1.938,856,4.387,857,1.938,858,1.938,859,1.938,860,1.938,861,1.938,862,1.938,863,4.791,864,3.277,865,3.847,866,1.938,867,1.938,868,1.938,869,1.938,870,3.087,871,1.651,872,1.938,873,1.938,874,1.651,875,1.938,876,1.938,877,1.938,878,1.938,879,1.938,880,1.938,881,1.938,882,1.938,883,1.938,884,1.938,885,1.938,886,1.938,887,1.938,888,1.938,889,1.938,890,1.938,891,4.791,892,1.938,893,1.938,894,1.938,895,1.938,896,1.938,897,1.938,898,1.938,899,1.938,900,1.938,901,1.938,902,1.938,903,3.087,904,1.938,905,1.938,906,1.938,907,1.938,908,1.651,909,1.938,910,1.938,911,3.847,912,3.087,913,3.087,914,2.629,915,3.087,916,4.387,917,1.938,918,3.087,919,1.938,920,1.938,921,1.651,922,1.938,923,1.938,924,1.938,925,1.938,926,1.938,927,1.938,928,1.938,929,1.938,930,1.938,931,1.938,932,1.938,933,5.353,934,1.938,935,1.651,936,1.938,937,1.938,938,1.651,939,1.938,940,1.938,941,1.938,942,1.938,943,1.938,944,1.938,945,1.938,946,1.938,947,1.462,948,1.938,949,1.938,950,1.938,951,1.938,952,1.651,953,1.938,954,1.938,955,1.938,956,1.938,957,3.087,958,3.087,959,1.938,960,1.938,961,1.938,962,2.629,963,3.087,964,3.087,965,1.938,966,1.938,967,1.938,968,4.387,969,1.938,970,1.938,971,1.938,972,1.938,973,3.087,974,1.938,975,1.938]],["title/coverage.html",[976,4.116]],["body/coverage.html",[5,0.171,6,0.368,7,2.555,8,3.19,9,2.308,12,0.023,15,1.303,17,2.111,27,0.015,28,0.015,29,1.288,31,3.348,42,1.303,48,0.564,49,1.209,50,1.303,52,3.011,53,3.011,59,0.769,79,1.227,83,1.227,87,1.165,104,1.196,110,1.303,134,1.385,151,1.385,154,1.385,157,1.385,169,0.816,173,0.972,180,1.303,182,1.303,184,1.303,186,1.303,198,2.555,199,2.308,200,2.111,216,3.531,230,2.555,231,2.555,232,2.308,235,2.111,236,2.111,242,2.495,243,2.308,245,2.335,246,2.308,257,2.555,259,2.308,261,1.474,263,3.606,268,1.474,271,2.886,272,2.886,286,3.531,291,3.531,298,2.111,299,2.886,300,1.805,403,2.555,412,2.555,413,2.555,416,2.308,420,2.555,421,3.19,422,2.555,423,2.555,424,2.308,427,1.682,428,2.308,430,2.886,431,2.886,606,2.555,607,2.308,609,2.111,612,2.886,613,2.555,614,2.886,664,2.555,668,2.555,669,2.308,812,2.555,976,2.886,977,3.389,978,3.389,979,7.268,980,5.367,981,6.813,982,5.367,983,4.683,984,6.441,985,4.683,986,6.076,987,3.389,988,5.367,989,3.389,990,3.389,991,2.886]],["title/dependencies.html",[637,2.449,722,2.02]],["body/dependencies.html",[12,0.023,14,0.33,27,0.019,28,0.019,178,1.935,415,3.795,467,2.681,479,4.286,637,2.89,802,4.286,844,3.795,992,5.033,993,5.033,994,5.033,995,7.128,996,5.033,997,6.048,998,5.033,999,5.033,1000,5.033,1001,6.048,1002,4.561,1003,5.033,1004,5.152,1005,5.033,1006,4.286,1007,5.033,1008,5.033,1009,5.033,1010,5.033,1011,5.033,1012,5.033]],["title/index.html",[33,0.493,680,1.848,681,1.848]],["body/index.html",[0,2.314,1,0.858,2,0.862,3,0.393,6,0.064,11,0.208,12,0.023,13,1.598,14,0.083,15,0.484,18,0.784,20,0.782,21,1.09,22,1.37,23,0.719,24,0.484,25,0.319,26,0.523,27,0.007,28,0.007,38,0.336,42,0.484,43,1.024,44,1.471,47,0.968,48,0.209,49,0.383,50,0.83,54,1.798,56,1.172,57,0.584,58,1.98,59,0.286,60,0.883,61,1.09,62,1.598,63,0.515,64,1.082,65,1.148,66,0.584,67,0.913,75,0.548,76,1.316,77,0.548,78,1.921,79,1.027,82,1.463,83,0.456,84,1.316,85,0.606,86,1.09,87,1.143,88,1.159,89,1.316,90,1.09,92,1.316,94,1.697,95,1.646,96,1.687,97,2.358,100,1.316,101,1.374,102,1.159,103,1.546,104,1.365,105,0.94,106,1.002,107,2.45,108,1.316,110,1.09,111,1.756,112,1.002,113,1.915,114,1.002,115,1.002,116,1.002,117,1.463,118,1.316,119,1.002,120,1.002,121,0.94,122,1.002,123,1.756,124,1.756,125,1.002,126,0.883,127,0.94,128,1.002,129,2.162,130,0.94,131,1.002,132,0.94,133,2.235,134,0.515,135,1.94,137,1.37,138,0.883,139,0.584,140,0.584,141,0.584,142,0.548,143,1.002,144,1.546,145,1.537,146,0.584,147,0.484,148,0.584,149,0.548,150,1.697,151,0.515,152,0.584,154,1.159,155,2.023,156,0.94,157,0.515,158,1.234,159,0.584,160,0.584,161,0.584,162,1.234,163,1.002,164,0.584,167,0.584,168,1.002,169,0.81,170,1.546,171,1.234,172,0.548,173,0.361,175,1.027,178,1.454,180,1.292,182,1.09,184,1.09,190,0.548,194,1.291,195,2.062,197,0.858,201,2.576,202,3.328,203,4.083,214,1.24,215,0.784,216,1.628,219,2.049,229,2.576,233,0.95,240,1.471,242,0.671,244,2.37,245,2.026,251,1.073,256,0.858,261,0.548,268,0.548,274,0.95,275,2.773,276,2.749,277,1.839,278,3.112,279,1.628,280,1.628,281,1.628,283,2.415,284,2.415,285,0.858,293,2.415,296,1.073,297,1.073,300,2.352,301,4.237,332,3.112,333,0.858,334,3.544,340,3.112,342,2.138,343,1.471,348,0.95,350,1.073,351,1.073,352,0.95,353,1.073,363,1.471,402,0.858,407,0.858,411,0.858,427,3.133,432,1.073,436,1.073,447,2.863,453,1.073,466,1.628,467,3.288,472,1.839,476,2.415,507,1.073,509,2.138,515,0.95,586,2.289,595,1.073,596,2.863,602,2.138,605,3.314,608,1.628,615,2.863,636,2.356,637,2.794,655,2.138,663,0.858,667,0.858,680,1.345,681,1.345,685,2.535,692,0.95,713,1.839,722,0.858,738,1.839,745,1.839,757,2.863,759,4.612,768,1.073,781,1.628,782,1.839,819,1.628,820,1.073,844,1.628,849,1.839,864,1.073,871,2.415,874,1.073,914,1.073,921,1.073,935,1.073,947,1.628,952,1.073,991,1.839,1002,0.95,1004,1.839,1006,1.073,1013,2.835,1014,3.782,1015,1.259,1016,5.046,1017,1.259,1018,1.259,1019,1.839,1020,1.839,1021,2.16,1022,2.16,1023,2.16,1024,3.782,1025,2.863,1026,2.16,1027,4.414,1028,1.259,1029,1.259,1030,2.16,1031,1.259,1032,1.259,1033,1.259,1034,4.414,1035,1.259,1036,4.127,1037,2.16,1038,2.16,1039,3.361,1040,1.259,1041,2.415,1042,3.361,1043,1.839,1044,1.259,1045,2.835,1046,1.259,1047,2.16,1048,2.16,1049,2.835,1050,1.259,1051,2.835,1052,1.259,1053,1.259,1054,1.259,1055,1.259,1056,2.835,1057,1.259,1058,1.259,1059,1.259,1060,1.259,1061,1.259,1062,1.259,1063,1.259,1064,1.259,1065,1.259,1066,1.259,1067,1.073,1068,2.835,1069,1.073,1070,5.204,1071,5.204,1072,2.835,1073,4.127,1074,1.259,1075,2.16,1076,1.259,1077,1.259,1078,2.835,1079,1.259,1080,1.259,1081,1.259,1082,2.16,1083,1.259,1084,1.259,1085,1.259,1086,1.259,1087,1.259,1088,1.073,1089,1.259,1090,1.259,1091,3.782,1092,1.259,1093,1.259,1094,1.259,1095,1.259,1096,1.259,1097,2.16,1098,1.259,1099,1.073,1100,1.259,1101,1.259,1102,1.259,1103,2.863,1104,1.259,1105,1.259,1106,1.259,1107,1.259,1108,1.259,1109,1.259,1110,1.259,1111,1.259,1112,1.259,1113,1.259,1114,1.259,1115,1.259,1116,1.259,1117,1.259,1118,1.259,1119,1.259,1120,1.259,1121,1.259,1122,1.471,1123,2.835,1124,2.16,1125,1.259,1126,1.259,1127,1.259,1128,1.073,1129,1.259,1130,1.259,1131,1.259,1132,1.259,1133,1.259,1134,1.259,1135,2.835,1136,2.835,1137,2.16,1138,2.16,1139,2.16,1140,2.16,1141,1.259,1142,1.259,1143,2.16,1144,2.16,1145,1.259,1146,1.259,1147,1.259,1148,1.259,1149,1.259,1150,1.259,1151,1.073,1152,1.073,1153,1.259,1154,3.782,1155,3.782,1156,3.782,1157,2.16,1158,5.046,1159,3.782,1160,3.221,1161,3.782,1162,3.782,1163,3.782,1164,2.16,1165,1.259,1166,1.259,1167,1.259,1168,1.259,1169,1.259,1170,1.259,1171,1.259,1172,1.259,1173,1.259,1174,1.259,1175,1.259,1176,1.259,1177,1.259,1178,1.259,1179,1.259,1180,1.259,1181,1.259]],["title/license.html",[680,1.848,681,1.848,1182,2.527]],["body/license.html",[4,0.39,5,0.271,11,0.089,12,0.011,23,0.377,26,0.274,27,0.009,28,0.009,32,0.313,36,0.45,51,0.639,54,0.506,67,0.568,82,0.767,85,0.772,86,0.678,97,2.329,147,1.597,202,1.098,203,1.201,204,1.502,275,1.524,288,1.329,343,3.331,421,2.829,458,2.436,515,1.329,523,2.722,556,2.436,643,1.329,688,2.722,759,1.329,781,1.329,811,1.502,812,2.722,819,1.329,908,1.502,947,4.869,962,2.436,1019,1.502,1020,1.502,1025,1.502,1041,2.436,1043,1.502,1067,1.502,1069,1.502,1088,1.502,1099,1.502,1103,1.502,1122,1.201,1128,1.502,1152,3.889,1160,2.436,1182,5.884,1183,4.154,1184,3.61,1185,1.763,1186,1.763,1187,1.763,1188,5.546,1189,6.045,1190,4.154,1191,4.566,1192,1.763,1193,6.212,1194,5.699,1195,1.763,1196,1.763,1197,5.699,1198,6.045,1199,4.89,1200,5.699,1201,2.861,1202,1.763,1203,4.566,1204,1.763,1205,1.763,1206,1.763,1207,4.154,1208,1.763,1209,5.546,1210,4.154,1211,2.861,1212,2.861,1213,1.763,1214,3.61,1215,2.861,1216,1.763,1217,1.763,1218,6.405,1219,4.154,1220,2.861,1221,1.763,1222,2.861,1223,1.763,1224,1.763,1225,1.763,1226,1.763,1227,1.763,1228,1.763,1229,1.763,1230,3.61,1231,1.763,1232,3.61,1233,2.861,1234,6.045,1235,1.763,1236,1.763,1237,4.89,1238,5.546,1239,4.154,1240,2.861,1241,3.61,1242,4.89,1243,1.763,1244,1.763,1245,1.763,1246,1.763,1247,1.763,1248,2.861,1249,1.763,1250,1.763,1251,1.763,1252,6.908,1253,3.61,1254,2.861,1255,1.763,1256,5.546,1257,2.861,1258,1.763,1259,4.566,1260,2.861,1261,1.763,1262,6.405,1263,1.763,1264,1.763,1265,1.763,1266,1.763,1267,1.763,1268,1.763,1269,2.861,1270,3.61,1271,1.763,1272,1.763,1273,1.763,1274,1.763,1275,4.154,1276,4.566,1277,1.763,1278,2.861,1279,4.154,1280,2.861,1281,1.763,1282,4.566,1283,2.861,1284,1.763,1285,1.763,1286,3.61,1287,1.763,1288,1.763,1289,1.763,1290,1.763,1291,2.861,1292,1.763,1293,1.763,1294,1.763,1295,3.61,1296,1.763,1297,1.763,1298,3.61,1299,1.763,1300,1.763,1301,1.763,1302,4.154,1303,5.699,1304,1.763,1305,1.763,1306,2.861,1307,5.366,1308,3.61,1309,2.861,1310,2.861,1311,2.861,1312,2.861,1313,3.61,1314,2.861,1315,3.61,1316,2.861,1317,2.861,1318,2.861,1319,2.861,1320,1.502,1321,2.861,1322,1.763,1323,1.763,1324,4.566,1325,5.151,1326,3.61,1327,2.861,1328,1.763,1329,2.861,1330,2.861,1331,1.763,1332,3.61,1333,2.861,1334,1.763,1335,1.763,1336,1.763,1337,3.61,1338,1.763,1339,1.763,1340,1.763,1341,2.861,1342,2.861,1343,1.763,1344,1.763,1345,1.763,1346,1.763,1347,1.763,1348,1.763,1349,1.763,1350,2.861,1351,1.763,1352,1.763,1353,1.763,1354,1.763,1355,1.763,1356,1.763,1357,1.763,1358,1.763,1359,3.61,1360,1.763,1361,3.61,1362,1.763,1363,1.763,1364,1.763,1365,1.763,1366,5.366,1367,1.763,1368,1.763,1369,1.763,1370,1.763,1371,1.763,1372,4.154,1373,2.861,1374,4.154,1375,1.763,1376,1.763,1377,1.763,1378,1.763,1379,1.763,1380,3.61,1381,1.763,1382,1.763,1383,2.861,1384,2.861,1385,1.763,1386,1.763,1387,1.763,1388,2.861,1389,1.763,1390,1.763,1391,4.566,1392,1.763,1393,1.763,1394,1.763,1395,1.763,1396,1.763,1397,1.763,1398,3.61,1399,4.154,1400,1.763,1401,1.763,1402,1.763,1403,1.763,1404,1.763,1405,1.763,1406,1.763,1407,1.763,1408,1.763,1409,1.763,1410,2.861,1411,1.763,1412,1.763,1413,2.861,1414,1.763,1415,1.763,1416,4.154,1417,1.763,1418,1.763,1419,1.763,1420,1.763,1421,1.763,1422,1.763,1423,4.154,1424,3.61,1425,3.61,1426,3.61,1427,2.861,1428,2.861,1429,3.61,1430,2.861,1431,2.861,1432,2.861,1433,1.763,1434,1.763,1435,1.763,1436,1.763,1437,1.763,1438,1.763,1439,1.763,1440,1.763,1441,1.763,1442,2.861,1443,1.763,1444,1.763,1445,1.763,1446,1.763,1447,4.566,1448,1.763,1449,1.763,1450,1.763,1451,1.763,1452,1.763,1453,1.763,1454,1.763,1455,1.763,1456,4.566,1457,1.763,1458,1.763,1459,1.763,1460,1.763,1461,1.763,1462,1.763,1463,1.763,1464,1.763,1465,1.763,1466,1.763,1467,1.763,1468,1.763,1469,1.763,1470,1.763,1471,1.763,1472,1.763,1473,1.763,1474,3.61,1475,1.763,1476,1.763,1477,1.763,1478,1.502,1479,1.763,1480,2.861,1481,1.763,1482,1.763,1483,1.763,1484,1.763,1485,1.763,1486,1.763,1487,1.763,1488,1.763,1489,1.763,1490,1.763,1491,1.763,1492,1.763,1493,1.763,1494,1.763,1495,1.763,1496,2.861,1497,1.763,1498,1.763,1499,1.763,1500,2.861,1501,2.861,1502,1.763,1503,1.763,1504,1.763,1505,1.763,1506,1.763,1507,1.763,1508,1.763,1509,1.763,1510,1.763,1511,1.763,1512,1.763,1513,1.763,1514,1.763,1515,1.763,1516,1.763,1517,1.763,1518,1.763,1519,1.763,1520,1.763,1521,1.763]],["title/modules.html",[2,1.469]],["body/modules.html",[1,3.473,2,1.55,12,0.019,27,0.019,28,0.019,197,3.473,229,3.473,256,3.473,402,3.473,411,3.473,419,3.846,586,3.473,605,3.473,636,3.176,663,3.473,667,3.473,1002,3.846,1122,4.943,1478,4.344,1522,7.258,1523,7.283,1524,5.1]],["title/overview.html",[1525,4.116]],["body/overview.html",[2,1.615,12,0.021,27,0.019,28,0.019,30,2.043,51,1.924,67,1.711,300,2.831,609,4.449,636,4.349,637,3.588,638,4.526,639,4.526,640,4.526,641,5.321,642,4.007,643,4.007,716,4.526,762,5.321,1525,4.526]],["title/properties.html",[55,1.296,722,2.02]],["body/properties.html",[12,0.022,27,0.02,28,0.02,55,1.685,427,2.753,467,2.955,688,4.182,691,4.724,692,4.182,1526,5.546,1527,5.546,1528,5.546,1529,5.546,1530,5.546]],["title/todo.html",[680,1.848,681,1.848,1531,2.527]],["body/todo.html",[12,0.022,27,0.019,28,0.019,54,1.789,107,2.55,133,2.167,145,1.435,202,3.302,203,4.249,215,3.302,244,3.807,275,3.532,427,2.632,467,2.824,685,3.997,938,4.515,1122,3.611,1151,5.646,1320,4.515,1531,5.313,1532,5.301,1533,5.301,1534,5.301]],["title/miscellaneous/variables.html",[1535,2.527,1536,3.632]],["body/miscellaneous/variables.html",[6,0.298,12,0.023,15,2.044,23,0.875,27,0.017,28,0.017,33,0.681,38,0.637,48,1.139,52,1.781,53,2.888,54,1.174,64,2.176,65,2.338,68,2.173,69,2.173,70,2.173,71,2.173,73,2.173,104,1.358,137,1.483,145,1.108,155,1.398,169,0.986,173,1.903,174,1.753,175,2.263,177,1.9,178,2.044,179,1.9,180,2.044,181,1.9,182,2.044,183,1.9,184,2.044,185,1.9,186,2.044,187,1.483,188,1.398,189,2.647,190,1.781,191,2.467,192,2.173,193,2.467,194,1.815,195,2.173,196,1.9,261,2.313,286,3.087,290,3.487,291,3.087,295,3.487,1535,3.487,1536,3.487,1537,6.476,1538,4.094,1539,4.094]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":216,"title":{},"body":{"injectables/B3PropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["0.10.0",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["0.11.0",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["0.16.0",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.17.0",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["0.18.0",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["0.18.2",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["0.19.0",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["0.21.0",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["0.22.0",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["0.24.0",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":1046,"title":{},"body":{"index.html":{}}}],["0.75",{"_index":1060,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["0615f02",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.0.0",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["1.4.1",{"_index":691,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1/1",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":713,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.2",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["10000ms",{"_index":148,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["106",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":762,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11/11",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":716,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.2",{"_index":1176,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["13.0.0",{"_index":1006,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13.3.10",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["13.3.12",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["13.3.9",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["151",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["154",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["156",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["157",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["16/16",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["18d04fd",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["1a56037",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["1c7c0c0",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["1f22380",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":692,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["2.0",{"_index":1184,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":1186,"title":{},"body":{"license.html":{}}}],["2020",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":1052,"title":{},"body":{"index.html":{}}}],["21",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["23e35d1",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["24f4d6f",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["26a2e27",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["2965c35",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":864,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":952,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["30000",{"_index":1055,"title":{},"body":{"index.html":{}}}],["31",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["332baf7",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["3ae307e",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":921,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4/4",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["40f33cc",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["412d2fd",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["41c8947",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["4318",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["4fcec62",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["5.0.12",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1225,"title":{},"body":{"license.html":{}}}],["5000",{"_index":1054,"title":{},"body":{"index.html":{}}}],["51",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":1053,"title":{},"body":{"index.html":{}}}],["563071d",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["59ac6ca",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["5a29d29",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["5a7c375",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":914,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.6.3",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["640d901",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["64ab01a",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["66ca86c",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["6763f97",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["68d7aee",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["7023a31",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["735b05d",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":1061,"title":{},"body":{"index.html":{}}}],["7a5b07e",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["7bbaf2e",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["7f3aba9",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["8/8",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["80d2ada",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["8442349",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":908,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9/node",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["97579f0",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":1062,"title":{},"body":{"index.html":{}}}],["_currentcontext",{"_index":562,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["_exact",{"_index":165,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["a1746bf",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["a6307f2",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["a73e382",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1403,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1477,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1474,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1178,"title":{},"body":{"index.html":{}}}],["act",{"_index":1484,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1205,"title":{},"body":{"license.html":{}}}],["action",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":1078,"title":{},"body":{"index.html":{}}}],["acts",{"_index":1454,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":635,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ad03334",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":275,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["add(span",{"_index":277,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["addendum",{"_index":1390,"title":{},"body":{"license.html":{}}}],["adding",{"_index":1130,"title":{},"body":{"index.html":{}}}],["addition",{"_index":164,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["additional",{"_index":1391,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1277,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1472,"title":{},"body":{"license.html":{}}}],["again",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1342,"title":{},"body":{"license.html":{}}}],["agent",{"_index":874,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1487,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1426,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1407,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1347,"title":{},"body":{"license.html":{}}}],["allow",{"_index":561,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["allowedcommonjsdependencies",{"_index":1169,"title":{},"body":{"index.html":{}}}],["alone",{"_index":1338,"title":{},"body":{"license.html":{}}}],["along",{"_index":1381,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1389,"title":{},"body":{"license.html":{}}}],["already",{"_index":600,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["althought",{"_index":1133,"title":{},"body":{"index.html":{}}}],["always",{"_index":324,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":359,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":360,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":1180,"title":{},"body":{"index.html":{}}}],["amd",{"_index":1159,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1481,"title":{},"body":{"license.html":{}}}],["angular",{"_index":467,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["angular.json",{"_index":1167,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":415,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":285,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":14,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":1266,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1183,"title":{},"body":{"license.html":{}}}],["api",{"_index":407,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["api.defaulttextmapsetter",{"_index":567,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.diag.setlogger(logger",{"_index":501,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":566,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.trace.setspan",{"_index":564,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["apis",{"_index":443,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":1030,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":1092,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":1112,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":1080,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1091,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1386,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1260,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1424,"title":{},"body":{"license.html":{}}}],["application",{"_index":1016,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1134,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1069,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply",{"_index":1496,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":602,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["appropriate",{"_index":1504,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1440,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1512,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1461,"title":{},"body":{"license.html":{}}}],["array",{"_index":168,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["asserted",{"_index":1493,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1445,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1443,"title":{},"body":{"license.html":{}}}],["async",{"_index":1065,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1497,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1258,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":91,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["attributes",{"_index":276,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["attributevalue",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["attribution",{"_index":1372,"title":{},"body":{"license.html":{}}}],["author",{"_index":1528,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1201,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1253,"title":{},"body":{"license.html":{}}}],["available",{"_index":1122,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["aws",{"_index":18,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"changelog.html":{},"index.html":{}}}],["awsxraypropagator",{"_index":39,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{}}}],["awsxraypropagatormodule",{"_index":1,"title":{"modules/AwsXrayPropagatorModule.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["awsxraypropagatorservice",{"_index":17,"title":{"injectables/AwsXrayPropagatorService.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b",{"_index":1362,"title":{},"body":{"license.html":{}}}],["b112065",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":201,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3e15af",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["b3injectencoding",{"_index":217,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":227,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":226,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":228,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":50,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":197,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":200,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":225,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["backendapp.get('/api/config",{"_index":1057,"title":{},"body":{"index.html":{}}}],["bad",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":1533,"title":{},"body":{"todo.html":{}}}],["bailouts",{"_index":1162,"title":{},"body":{"index.html":{}}}],["base",{"_index":270,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["based",{"_index":1128,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1428,"title":{},"body":{"license.html":{}}}],["batch",{"_index":118,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["batchspanexporter",{"_index":109,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanexporter(async",{"_index":98,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":340,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(exporter.getexporter",{"_index":399,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["batchspanprocessor(this.exporterservice.getexporter",{"_index":582,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["batchspanprocessorconfig",{"_index":110,"title":{"interfaces/BatchSpanProcessorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["bca88a0",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":130,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["behalf",{"_index":1282,"title":{},"body":{"license.html":{}}}],["below",{"_index":1261,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1229,"title":{},"body":{"license.html":{}}}],["between",{"_index":123,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["bfc26ae",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1274,"title":{},"body":{"license.html":{}}}],["body",{"_index":102,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["boilerplate",{"_index":1498,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":95,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":1063,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1097,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":1501,"title":{},"body":{"license.html":{}}}],["branch",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1523,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1002,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bufferconfig",{"_index":482,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bug",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1369,"title":{},"body":{"license.html":{}}}],["c2b4209",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["c36e295",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["c53447a",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["c9f8667",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["caab7a9",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":509,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["calls",{"_index":441,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["cancelled",{"_index":131,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["carrier",{"_index":565,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":569,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":1364,"title":{},"body":{"license.html":{}}}],["catch",{"_index":1031,"title":{},"body":{"index.html":{}}}],["cause",{"_index":1160,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":1368,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":682,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1460,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1315,"title":{},"body":{"license.html":{}}}],["choices",{"_index":1077,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1475,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1344,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1333,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["classprovider",{"_index":68,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["cluster_otelwebtracermodule",{"_index":638,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_declarations",{"_index":639,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_exports",{"_index":640,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["code",{"_index":523,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":133,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":1165,"title":{},"body":{"index.html":{}}}],["collector/docker",{"_index":1146,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":651,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":653,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":1339,"title":{},"body":{"license.html":{}}}],["command",{"_index":1136,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1505,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1469,"title":{},"body":{"license.html":{}}}],["commit",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":82,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":83,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":170,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonconfig.resourceattributes",{"_index":390,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["commonconfig.servicename",{"_index":389,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["commonjs",{"_index":1158,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":414,"title":{},"body":{"modules/NoopSpanExporterModule.html":{}}}],["commons",{"_index":1023,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1286,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":179,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":1247,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1515,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1396,"title":{},"body":{"license.html":{}}}],["component",{"_index":300,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/otel",{"_index":647,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["component_template",{"_index":633,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["components",{"_index":610,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["compose",{"_index":1144,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":1147,"title":{},"body":{"index.html":{}}}],["composite",{"_index":233,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{},"index.html":{}}}],["compositepropagator",{"_index":239,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":229,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":232,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1466,"title":{},"body":{"license.html":{}}}],["concurencylimit",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["concurrencylimit",{"_index":142,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["conditions",{"_index":1189,"title":{},"body":{"license.html":{}}}],["config",{"_index":174,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.logbody",{"_index":500,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.loglevel",{"_index":502,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":409,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":659,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":658,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":678,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":677,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configprovider",{"_index":189,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["configprovider.provide",{"_index":191,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":849,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configuration",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["configuration/directive",{"_index":1113,"title":{},"body":{"index.html":{}}}],["configuration/opentelemetry",{"_index":220,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":1036,"title":{},"body":{"index.html":{}}}],["configured",{"_index":673,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consecutive",{"_index":125,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consequential",{"_index":1459,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":457,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1483,"title":{},"body":{"license.html":{}}}],["console",{"_index":94,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":266,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":256,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":259,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":1299,"title":{},"body":{"license.html":{}}}],["const",{"_index":176,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":1348,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":208,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(otel_config",{"_index":222,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":234,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":209,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(instrumentationservice",{"_index":620,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructor(private",{"_index":626,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructorprovider",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["construed",{"_index":1392,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1378,"title":{},"body":{"license.html":{}}}],["content",{"_index":1020,"title":{},"body":{"index.html":{},"license.html":{}}}],["contents",{"_index":1019,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":242,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["contextmanager",{"_index":302,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":1220,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1276,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1337,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1398,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1303,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1349,"title":{},"body":{"license.html":{}}}],["control",{"_index":1207,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1208,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":356,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["conversions",{"_index":1249,"title":{},"body":{"license.html":{}}}],["convert",{"_index":318,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber",{"_index":304,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber(value",{"_index":316,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["copies",{"_index":1356,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1361,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1198,"title":{},"body":{"license.html":{}}}],["core",{"_index":1084,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":1345,"title":{},"body":{"license.html":{}}}],["cours",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":976,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1129,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1343,"title":{},"body":{"license.html":{}}}],["current",{"_index":447,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":137,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":1418,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":156,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customize",{"_index":1109,"title":{},"body":{"index.html":{}}}],["customspan",{"_index":79,"title":{"interfaces/CustomSpan.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["customspanimpl",{"_index":1124,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1375,"title":{},"body":{"license.html":{}}}],["d2ecbb8",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["d8b9f3c",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1456,"title":{},"body":{"license.html":{}}}],["dangle",{"_index":560,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["date",{"_index":1353,"title":{},"body":{"license.html":{}}}],["dbaec60",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["dcde5bb",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["dd7a0e5",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["de50104",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1117,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["declare",{"_index":1098,"title":{},"body":{"index.html":{}}}],["declared",{"_index":1179,"title":{},"body":{"index.html":{}}}],["default",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1489,"title":{},"body":{"license.html":{}}}],["define",{"_index":214,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["defineb3encoding",{"_index":207,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":212,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineconfigprovider",{"_index":186,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defineconfigprovider(config,configprovider",{"_index":604,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["defined",{"_index":36,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":305,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":320,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":1211,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1192,"title":{},"body":{"license.html":{}}}],["del",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1451,"title":{},"body":{"license.html":{}}}],["dep",{"_index":353,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["dependence",{"_index":745,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":637,"title":{"dependencies.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":1166,"title":{},"body":{"index.html":{}}}],["depends",{"_index":1156,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":1015,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["derivative",{"_index":1262,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1263,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1419,"title":{},"body":{"license.html":{}}}],["description",{"_index":32,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":1301,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1439,"title":{},"body":{"license.html":{}}}],["devkit/core",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["dgo",{"_index":1149,"title":{},"body":{"index.html":{}}}],["diaglogger",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["different",{"_index":1395,"title":{},"body":{"license.html":{}}}],["dir",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1214,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1216,"title":{},"body":{"license.html":{}}}],["directive",{"_index":631,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["directives",{"_index":634,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disable",{"_index":366,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{}}}],["disclaimer",{"_index":1422,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1296,"title":{},"body":{"license.html":{}}}],["display",{"_index":1041,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":1324,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1380,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1191,"title":{},"body":{"license.html":{}}}],["doc",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1143,"title":{},"body":{"index.html":{}}}],["docs",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":781,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation",{"_index":812,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":442,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["don't",{"_index":819,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":1534,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["dropped",{"_index":116,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["during",{"_index":283,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["dynamic",{"_index":802,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["e29c839",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["e9dc64b",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":147,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["ead3251",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":1510,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":1264,"title":{},"body":{"license.html":{}}}],["ee08e85",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["efa9083",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["elaborations",{"_index":1267,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1283,"title":{},"body":{"license.html":{}}}],["element",{"_index":630,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["en",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["encapsulates",{"_index":440,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["enclosed",{"_index":1500,"title":{},"body":{"license.html":{}}}],["end",{"_index":1495,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1206,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1200,"title":{},"body":{"license.html":{}}}],["enum",{"_index":1051,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1093,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":1094,"title":{},"body":{"index.html":{}}}],["equal",{"_index":120,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["error",{"_index":194,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error(`configuration",{"_index":193,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":365,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["eslint/component",{"_index":624,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["even",{"_index":1471,"title":{},"body":{"license.html":{}}}],["event",{"_index":515,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":519,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":531,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":529,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":527,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":518,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exact",{"_index":296,"title":{},"body":{"interfaces/IgnoreUrlsConfig.html":{},"index.html":{}}}],["example",{"_index":759,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["exampleand",{"_index":1138,"title":{},"body":{"index.html":{}}}],["except",{"_index":1326,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1298,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1314,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1408,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1446,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1231,"title":{},"body":{"license.html":{}}}],["existing",{"_index":1114,"title":{},"body":{"index.html":{}}}],["existingprovider",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1400,"title":{},"body":{"license.html":{}}}],["export",{"_index":25,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":1172,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":145,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":262,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":258,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":260,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":263,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":670,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:18",{"_index":265,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/NoopSpanExporterService.html":{}}}],["exporter.service.ts:21",{"_index":649,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:36",{"_index":671,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:44",{"_index":650,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter/exporter.interface",{"_index":371,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["exporter/noop",{"_index":413,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["exporterconfig",{"_index":675,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":1081,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":312,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":126,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exporttimeoutmillis",{"_index":132,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exposes",{"_index":1107,"title":{},"body":{"index.html":{}}}],["express",{"_index":1430,"title":{},"body":{"license.html":{}}}],["external",{"_index":757,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["extra",{"_index":89,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["f",{"_index":1145,"title":{},"body":{"index.html":{}}}],["f0a18ea",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["f195a50",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["fabre",{"_index":1530,"title":{},"body":{"properties.html":{}}}],["factoryprovider",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["fad044a",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1467,"title":{},"body":{"license.html":{}}}],["fake",{"_index":1082,"title":{},"body":{"index.html":{}}}],["false",{"_index":476,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["features",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1476,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1037,"title":{},"body":{"index.html":{}}}],["ff373c0",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":674,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1499,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1223,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1354,"title":{},"body":{"license.html":{}}}],["files",{"_index":1241,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":486,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1435,"title":{},"body":{"license.html":{}}}],["fix",{"_index":507,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["fixes",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1359,"title":{},"body":{"license.html":{}}}],["forget",{"_index":820,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["form",{"_index":1234,"title":{},"body":{"license.html":{}}}],["format",{"_index":1507,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":589,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["forroot(config",{"_index":590,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["free",{"_index":1317,"title":{},"body":{"license.html":{}}}],["functions",{"_index":1115,"title":{},"body":{"index.html":{}}}],["generally",{"_index":1079,"title":{},"body":{"index.html":{}}}],["generate",{"_index":346,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["generated",{"_index":1248,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":264,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":35,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["getting",{"_index":680,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(infolibrary.name",{"_index":539,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["geturl",{"_index":433,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":288,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":1022,"title":{},"body":{"index.html":{}}}],["going",{"_index":1105,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1464,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1520,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1308,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1233,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1202,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1310,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1522,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1452,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1491,"title":{},"body":{"license.html":{}}}],["header",{"_index":62,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":138,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":1151,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":1309,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1404,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1490,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1526,"title":{},"body":{"properties.html":{}}}],["hostname",{"_index":449,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["html",{"_index":629,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["http",{"_index":245,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["http.interceptor",{"_index":598,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":431,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:107",{"_index":464,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:161",{"_index":446,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:168",{"_index":469,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:185",{"_index":452,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:217",{"_index":456,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:237",{"_index":460,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:249",{"_index":459,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:261",{"_index":461,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:281",{"_index":445,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:298",{"_index":444,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:310",{"_index":471,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:54",{"_index":477,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:58",{"_index":474,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:62",{"_index":439,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":1150,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1140,"title":{},"body":{"index.html":{}}}],["http://localhost:4318/v1/trace",{"_index":136,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["http://localhost:4318/v1/traces",{"_index":1056,"title":{},"body":{"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":152,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1187,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1517,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":595,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclient",{"_index":1032,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":596,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":281,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpevent",{"_index":478,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":463,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":274,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":279,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpresponse",{"_index":280,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":1163,"title":{},"body":{"index.html":{}}}],["https://github.com/jufab/opentelemetry",{"_index":1527,"title":{},"body":{"properties.html":{}}}],["https://github.com/open",{"_index":1070,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":1018,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":294,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["id",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1511,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1503,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":268,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["ignore",{"_index":738,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ignoreurls",{"_index":162,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["ignoreurlsconfig",{"_index":157,"title":{"interfaces/IgnoreUrlsConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["ii",{"_index":1221,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1228,"title":{},"body":{"license.html":{}}}],["implement",{"_index":1123,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":293,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":47,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1431,"title":{},"body":{"license.html":{}}}],["import",{"_index":11,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":1297,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1462,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1458,"title":{},"body":{"license.html":{}}}],["include",{"_index":1270,"title":{},"body":{"license.html":{}}}],["included",{"_index":1257,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1376,"title":{},"body":{"license.html":{}}}],["including",{"_index":1238,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1280,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1306,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1492,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1488,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1479,"title":{},"body":{"license.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1255,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1215,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1230,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["infolibrary",{"_index":488,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["infolibrary.version",{"_index":540,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["infor",{"_index":1110,"title":{},"body":{"index.html":{}}}],["information",{"_index":204,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":1387,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1336,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1350,"title":{},"body":{"license.html":{}}}],["init",{"_index":328,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{}}}],["initialise",{"_index":453,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initinstrumentation",{"_index":307,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["initspan",{"_index":434,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":451,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":219,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(awsxraypropagatorservice",{"_index":250,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(b3propagatorservice",{"_index":247,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":249,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(otel_config",{"_index":492,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otel_custom_span",{"_index":494,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_exporter",{"_index":373,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_instrumentation_plugins",{"_index":375,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["inject(otel_logger",{"_index":493,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_propagator",{"_index":374,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(w3ctracecontextpropagatorservice",{"_index":248,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["injectable",{"_index":29,"title":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":30,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":435,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":455,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":273,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":224,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":175,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":177,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.custom",{"_index":183,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":290,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.instrumentation.plugins",{"_index":185,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":181,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":295,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":289,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":332,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":308,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":330,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertornotspanexporter",{"_index":309,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertornotspanexporter(production",{"_index":335,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertspanprocessorproductionmode",{"_index":310,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":338,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["install",{"_index":1035,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1021,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1340,"title":{},"body":{"license.html":{}}}],["instrumentation",{"_index":301,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"index.html":{}}}],["instrumentationoption",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["instrumentationoptions",{"_index":314,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentations",{"_index":385,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationservice",{"_index":298,"title":{"injectables/InstrumentationService.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["integration",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["intentionally",{"_index":1278,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":436,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":462,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":454,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interception",{"_index":284,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["interceptor",{"_index":427,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["interceptor.js",{"_index":1155,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":588,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:36",{"_index":591,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/custom",{"_index":80,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["interceptor/opentelemetry",{"_index":597,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/component/otel",{"_index":612,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/custom",{"_index":271,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":430,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":587,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/otel",{"_index":644,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":257,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":286,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:13",{"_index":287,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/noop",{"_index":412,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":606,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":668,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts",{"_index":299,"title":{},"body":{"injectables/InstrumentationService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:109",{"_index":331,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:124",{"_index":339,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:141",{"_index":317,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:151",{"_index":321,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:33",{"_index":349,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:38",{"_index":315,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:63",{"_index":327,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:80",{"_index":345,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:95",{"_index":336,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/propagator/aws",{"_index":7,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":198,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":230,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":403,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":420,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":291,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:13",{"_index":292,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/lib/services/propagator/w3c",{"_index":664,"title":{},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/public",{"_index":1100,"title":{},"body":{"index.html":{}}}],["interceptorconfiguration",{"_index":1040,"title":{},"body":{"index.html":{}}}],["interceptorprovider",{"_index":603,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptors",{"_index":429,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":49,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["interval",{"_index":122,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ipropagator",{"_index":42,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["irrevocable",{"_index":1318,"title":{},"body":{"license.html":{}}}],["issue",{"_index":1292,"title":{},"body":{"license.html":{}}}],["issue#38",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["issue#4",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["issue#41",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["issue#42",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["issue#80",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["isurlignored",{"_index":483,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["isurlignored(request.url",{"_index":503,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["it's",{"_index":215,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":244,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":1087,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":402,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":236,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":406,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{}}}],["jaegerpropagator(this.customheader",{"_index":410,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerpropagatorconfig",{"_index":154,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":1185,"title":{},"body":{"license.html":{}}}],["jest",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":844,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["js/tree/main/experimental/packages/exporter",{"_index":1072,"title":{},"body":{"index.html":{}}}],["js/tree/main/experimental/packages/opentelemetry",{"_index":1083,"title":{},"body":{"index.html":{}}}],["js/tree/main/packages/opentelemetry",{"_index":1073,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":521,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":1013,"title":{},"body":{"index.html":{}}}],["julien",{"_index":1529,"title":{},"body":{"properties.html":{}}}],["key",{"_index":153,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":556,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["language",{"_index":1519,"title":{},"body":{"license.html":{}}}],["last",{"_index":1076,"title":{},"body":{"index.html":{}}}],["law",{"_index":1425,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1346,"title":{},"body":{"license.html":{}}}],["legal",{"_index":1203,"title":{},"body":{"license.html":{}}}],["legend",{"_index":628,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["len",{"_index":370,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["level",{"_index":106,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["liability",{"_index":1447,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1455,"title":{},"body":{"license.html":{}}}],["library",{"_index":1014,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":1334,"title":{},"body":{"license.html":{}}}],["license",{"_index":1182,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1514,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1351,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1197,"title":{},"body":{"license.html":{}}}],["limit",{"_index":139,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["limitation",{"_index":1432,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1521,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1239,"title":{},"body":{"license.html":{}}}],["line",{"_index":368,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{}}}],["link",{"_index":811,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["list",{"_index":1068,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1290,"title":{},"body":{"license.html":{}}}],["literal",{"_index":666,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":1341,"title":{},"body":{"license.html":{}}}],["load",{"_index":782,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loaded",{"_index":601,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["loadresourceattributes",{"_index":311,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["loadresourceattributes(commonconfig",{"_index":344,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["lock",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["lock.json",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":101,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["logbody",{"_index":105,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["logger",{"_index":178,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":1118,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":1119,"title":{},"body":{"index.html":{}}}],["logging",{"_index":871,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loglevel",{"_index":108,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loglevel:diagloglevel.all",{"_index":1050,"title":{},"body":{"index.html":{}}}],["long",{"_index":128,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loss",{"_index":1463,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1470,"title":{},"body":{"license.html":{}}}],["made",{"_index":1254,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1289,"title":{},"body":{"license.html":{}}}],["main",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1328,"title":{},"body":{"license.html":{}}}],["making",{"_index":1236,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1468,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1294,"title":{},"body":{"license.html":{}}}],["management",{"_index":1217,"title":{},"body":{"license.html":{}}}],["manager",{"_index":475,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":423,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":1300,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1414,"title":{},"body":{"license.html":{}}}],["match",{"_index":160,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["matches",{"_index":297,"title":{},"body":{"interfaces/IgnoreUrlsConfig.html":{},"index.html":{}}}],["matches_",{"_index":166,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["matching",{"_index":28,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":369,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["maxexportbatchsize",{"_index":121,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maximum",{"_index":111,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maxqueuesize",{"_index":117,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["mean",{"_index":1194,"title":{},"body":{"license.html":{}}}],["means",{"_index":1212,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1244,"title":{},"body":{"license.html":{}}}],["media",{"_index":1250,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1357,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1358,"title":{},"body":{"license.html":{}}}],["member",{"_index":1173,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1434,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1273,"title":{},"body":{"license.html":{}}}],["merge",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":528,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["metadata",{"_index":617,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["method",{"_index":466,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["methods",{"_index":34,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1535,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":341,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":1237,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1363,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1388,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1393,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":593,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["more",{"_index":203,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["named",{"_index":1111,"title":{},"body":{"index.html":{}}}],["names",{"_index":1413,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":1045,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":1335,"title":{},"body":{"license.html":{}}}],["need",{"_index":1034,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1450,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1453,"title":{},"body":{"license.html":{}}}],["new",{"_index":48,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":367,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["next.handle(request",{"_index":505,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":514,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":13,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngoninit",{"_index":619,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ngx",{"_index":1004,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":1024,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1171,"title":{},"body":{"index.html":{}}}],["non",{"_index":1313,"title":{},"body":{"license.html":{}}}],["noop",{"_index":417,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":1085,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":425,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["noopspanexportermodule",{"_index":411,"title":{"modules/NoopSpanExporterModule.html":{}},"body":{"modules/NoopSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["noopspanexporterservice",{"_index":416,"title":{"injectables/NoopSpanExporterService.html":{}},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["noopspanprocessor",{"_index":364,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["nooptextmappropagator",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["nooptextmappropagatormodule",{"_index":419,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":424,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":1385,"title":{},"body":{"license.html":{}}}],["notable",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1043,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":1256,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1366,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1402,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1039,"title":{},"body":{"index.html":{}}}],["null",{"_index":187,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":319,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["number(config.otelcolconfig?.concurrencylimit",{"_index":660,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["number(config.otelcolconfig?.timeoutmillis",{"_index":661,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["number(value",{"_index":401,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["o",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":1242,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1480,"title":{},"body":{"license.html":{}}}],["observable",{"_index":468,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1516,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1329,"title":{},"body":{"license.html":{}}}],["offers",{"_index":1028,"title":{},"body":{"index.html":{}}}],["ok",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":1088,"title":{},"body":{"index.html":{},"license.html":{}}}],["oninit",{"_index":616,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["op",{"_index":418,"title":{},"body":{"injectables/NoopSpanExporterService.html":{}}}],["open",{"_index":1139,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":107,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":43,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":350,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["opentelemetry/core",{"_index":240,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":655,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/instrumentation",{"_index":78,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/otlp",{"_index":656,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["opentelemetry/propagator",{"_index":44,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"index.html":{}}}],["opentelemetry/resources",{"_index":357,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/sdk",{"_index":269,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["opentelemetry/semantic",{"_index":355,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/tracing",{"_index":1164,"title":{},"body":{"index.html":{}}}],["opentelemetry/web",{"_index":1157,"title":{},"body":{"index.html":{}}}],["opentelemetryconfig",{"_index":169,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryhttpinterceptor",{"_index":428,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinterceptor",{"_index":432,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":586,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":1096,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["opentelemtry",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":1161,"title":{},"body":{"index.html":{}}}],["option",{"_index":1121,"title":{},"body":{"index.html":{}}}],["optional",{"_index":56,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":1168,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1420,"title":{},"body":{"license.html":{}}}],["original",{"_index":458,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["os",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["otel",{"_index":615,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["otel_config",{"_index":173,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_custom_span",{"_index":182,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_exporter",{"_index":261,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"modules/NoopSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_instrumentation_plugins",{"_index":184,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_logger",{"_index":180,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_propagator",{"_index":15,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol",{"_index":608,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcolconfig",{"_index":171,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":605,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":607,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":134,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otelwebtracercomponent",{"_index":609,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{},"overview.html":{}}}],["otelwebtracermodule",{"_index":636,"title":{"modules/OtelWebTracerModule.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["otelwebtracermodule.forroot(environment.opentelemetryconfig",{"_index":1101,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":343,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["otlp",{"_index":144,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["otlpexporterconfigbase",{"_index":652,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter",{"_index":654,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter(this.otelcolconfig",{"_index":662,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["out",{"_index":643,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":1226,"title":{},"body":{"license.html":{}}}],["overide",{"_index":465,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["override",{"_index":1108,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1525,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1199,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1222,"title":{},"body":{"license.html":{}}}],["package",{"_index":722,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":1509,"title":{},"body":{"license.html":{}}}],["param",{"_index":221,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":211,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":361,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":599,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["part",{"_index":1374,"title":{},"body":{"license.html":{}}}],["partial",{"_index":93,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["partially",{"_index":159,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["particular",{"_index":1436,"title":{},"body":{"license.html":{}}}],["party",{"_index":1384,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1325,"title":{},"body":{"license.html":{}}}],["peer",{"_index":352,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["peerdependencies",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["pending",{"_index":140,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["percent",{"_index":1224,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":1048,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1322,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1411,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1232,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1311,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1373,"title":{},"body":{"license.html":{}}}],["places",{"_index":1379,"title":{},"body":{"license.html":{}}}],["platformlocation",{"_index":438,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["plugin",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["plugins",{"_index":1033,"title":{},"body":{"index.html":{}}}],["port",{"_index":450,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["possibilities",{"_index":1029,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1473,"title":{},"body":{"license.html":{}}}],["power",{"_index":1213,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1235,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1320,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1508,"title":{},"body":{"license.html":{}}}],["private",{"_index":205,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":322,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":100,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1415,"title":{},"body":{"license.html":{}}}],["production",{"_index":96,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":938,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":685,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/instrumentation",{"_index":1132,"title":{},"body":{"index.html":{}}}],["projects/interceptor",{"_index":1131,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1365,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1075,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":155,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":16,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.module.ts",{"_index":10,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service",{"_index":19,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":31,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:15",{"_index":237,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":426,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":37,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":404,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.service.ts:24",{"_index":210,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":405,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":238,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:43",{"_index":213,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:55",{"_index":218,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/aws",{"_index":9,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/b3",{"_index":199,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":231,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":246,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":422,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator/propagator.interface",{"_index":372,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["propagator/w3c",{"_index":243,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":251,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":313,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":55,"title":{"properties.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"properties.html":{}}}],["protocol",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":23,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/IgnoreUrlsConfig.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1259,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":45,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["provider",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["provides",{"_index":1427,"title":{},"body":{"license.html":{}}}],["public",{"_index":306,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["publicly",{"_index":1321,"title":{},"body":{"license.html":{}}}],["publish",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1295,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1210,"title":{},"body":{"license.html":{}}}],["queue",{"_index":112,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ray",{"_index":1090,"title":{},"body":{"index.html":{}}}],["reached",{"_index":114,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["readable",{"_index":1377,"title":{},"body":{"license.html":{}}}],["readme",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1494,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1417,"title":{},"body":{"license.html":{}}}],["received",{"_index":1304,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1360,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1067,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1442,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1355,"title":{},"body":{"license.html":{}}}],["redo",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":1409,"title":{},"body":{"license.html":{}}}],["regex",{"_index":161,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["registerinstrumentations",{"_index":358,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["reinit",{"_index":508,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["release",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":1271,"title":{},"body":{"license.html":{}}}],["remove",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1502,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1268,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1288,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1319,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1421,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1190,"title":{},"body":{"license.html":{}}}],["req,res",{"_index":1058,"title":{},"body":{"index.html":{}}}],["request",{"_index":278,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["request.clone",{"_index":571,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":570,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":568,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":544,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method.touppercase",{"_index":542,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.params",{"_index":1126,"title":{},"body":{"index.html":{}}}],["request.urlwithparams",{"_index":546,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams.startswith('http",{"_index":536,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["requests",{"_index":141,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["required",{"_index":1416,"title":{},"body":{"license.html":{}}}],["res.status(200).send",{"_index":1059,"title":{},"body":{"index.html":{}}}],["reset",{"_index":642,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"overview.html":{}}}],["resource",{"_index":90,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["resource(commonconfig.resourceattributes",{"_index":392,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["resource.default().merge",{"_index":387,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["resourceattributes",{"_index":88,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["resourceattributes.merge(new",{"_index":391,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["response",{"_index":103,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["response.status",{"_index":1127,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1486,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1438,"title":{},"body":{"license.html":{}}}],["restart",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":1025,"title":{},"body":{"index.html":{},"license.html":{}}}],["resulting",{"_index":1243,"title":{},"body":{"license.html":{}}}],["results",{"_index":27,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1370,"title":{},"body":{"license.html":{}}}],["return",{"_index":38,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":1265,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1482,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1444,"title":{},"body":{"license.html":{}}}],["root",{"_index":46,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":1316,"title":{},"body":{"license.html":{}}}],["run",{"_index":129,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["rxjs",{"_index":479,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":487,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":1103,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":326,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":325,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":323,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":1047,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":935,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scheduleddelaymillis",{"_index":127,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["scheme",{"_index":448,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["section",{"_index":1099,"title":{},"body":{"index.html":{},"license.html":{}}}],["sections",{"_index":1195,"title":{},"body":{"license.html":{}}}],["see",{"_index":202,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["selector",{"_index":618,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["sell",{"_index":1330,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["semanticattributes",{"_index":484,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_host",{"_index":547,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_method",{"_index":543,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_scheme",{"_index":549,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_status_code",{"_index":517,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_target",{"_index":551,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_url",{"_index":545,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_user_agent",{"_index":554,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes",{"_index":354,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes.service_name",{"_index":388,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes.service_namespace",{"_index":1044,"title":{},"body":{"index.html":{}}}],["send",{"_index":1042,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1153,"title":{},"body":{"index.html":{}}}],["sent",{"_index":1287,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1272,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1406,"title":{},"body":{"license.html":{}}}],["service",{"_index":86,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["service.namespace",{"_index":92,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["servicename",{"_index":84,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":490,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/instrumentation/instrumentation.service",{"_index":623,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{}}}],["services/propagator/propagator.interface",{"_index":491,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["set",{"_index":472,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["setcustomspan",{"_index":437,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setcustomspan(span",{"_index":470,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":572,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":1193,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1227,"title":{},"body":{"license.html":{}}}],["show",{"_index":1074,"title":{},"body":{"index.html":{}}}],["simplespanexporter(sync",{"_index":99,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":342,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(exporter.getexporter",{"_index":400,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["simplespanprocessor(new",{"_index":398,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(this.exporterservice.getexporter",{"_index":583,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["size",{"_index":113,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["skipself",{"_index":594,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["smaller",{"_index":119,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["software",{"_index":1240,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1485,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1437,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":104,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["span.addevent('response",{"_index":520,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":533,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.interface",{"_index":81,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["span.interface.ts",{"_index":272,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["span.interface.ts:16",{"_index":282,"title":{},"body":{"interfaces/CustomSpan.html":{}}}],["span.kind",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["span.recordexception",{"_index":526,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('mycustom.key",{"_index":1125,"title":{},"body":{"index.html":{}}}],["span.setattributes",{"_index":516,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":522,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":267,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spankind",{"_index":481,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spankind.client",{"_index":557,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spans",{"_index":115,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["spanstatuscode",{"_index":480,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.error",{"_index":532,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.unset",{"_index":524,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":1457,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1518,"title":{},"body":{"license.html":{}}}],["specify",{"_index":196,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":530,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":473,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1135,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":1137,"title":{},"body":{"index.html":{}}}],["started",{"_index":681,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":541,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":1401,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1327,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1394,"title":{},"body":{"license.html":{}}}],["statements",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":206,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["stating",{"_index":1367,"title":{},"body":{"license.html":{}}}],["status.code",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["stoppage",{"_index":1465,"title":{},"body":{"license.html":{}}}],["string",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["strings",{"_index":167,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":962,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":1323,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1397,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1281,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1279,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1305,"title":{},"body":{"license.html":{}}}],["such",{"_index":1218,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1405,"title":{},"body":{"license.html":{}}}],["support",{"_index":1478,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":1524,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":1066,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1506,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1291,"title":{},"body":{"license.html":{}}}],["table",{"_index":991,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":485,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1532,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":1071,"title":{},"body":{"index.html":{}}}],["template",{"_index":625,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["terminate",{"_index":1352,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1188,"title":{},"body":{"license.html":{}}}],["test",{"_index":768,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":421,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":41,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["theory",{"_index":1448,"title":{},"body":{"license.html":{}}}],["there's",{"_index":1142,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1275,"title":{},"body":{"license.html":{}}}],["third",{"_index":1383,"title":{},"body":{"license.html":{}}}],["this.awsxraypropagatorservice.getpropagator",{"_index":255,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.b3propagatorconfig",{"_index":223,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":252,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.console",{"_index":381,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.production",{"_index":581,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.ignoreurls?.urls",{"_index":504,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":383,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":563,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":558,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.disable",{"_index":506,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.enable",{"_index":510,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.exporttimeoutmillis",{"_index":579,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxexportbatchsize",{"_index":577,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxqueuesize",{"_index":580,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.scheduleddelaymillis",{"_index":578,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":408,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.customspan",{"_index":584,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customspan.add(span",{"_index":585,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(config.commonconfig.probabilitysampler",{"_index":496,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(this.config.commonconfig.probabilitysampler",{"_index":377,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice",{"_index":380,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice.getexporter",{"_index":393,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.initspan(request",{"_index":511,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":513,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter",{"_index":574,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(console",{"_index":395,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertornotspanexporter",{"_index":497,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertornotspanexporter(this.config.commonconfig.production",{"_index":379,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":573,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode(production",{"_index":394,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationoptions",{"_index":386,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationservice.initinstrumentation",{"_index":627,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":254,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.loadresourceattributes(this.config.commonconfig",{"_index":378,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.logbody",{"_index":499,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.otelcolconfig",{"_index":657,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.platformlocation.href",{"_index":534,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.propagatorservice.getpropagator",{"_index":384,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.setcustomspan(span",{"_index":525,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":495,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":576,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor(new",{"_index":575,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":498,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracerprovider",{"_index":376,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor",{"_index":397,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor(new",{"_index":396,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.register",{"_index":382,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.w3ctracecontextpropagatorservice.getpropagator",{"_index":253,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.zipkinconfig",{"_index":676,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":1332,"title":{},"body":{"license.html":{}}}],["through",{"_index":1196,"title":{},"body":{"license.html":{}}}],["throw",{"_index":192,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":143,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["timeout",{"_index":1174,"title":{},"body":{"index.html":{}}}],["timeoutmillis",{"_index":149,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["title",{"_index":1433,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1531,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":195,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1449,"title":{},"body":{"license.html":{}}}],["trace",{"_index":87,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["traced",{"_index":163,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["tracedreq",{"_index":512,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":362,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":333,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["tracerprovider",{"_index":303,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["traces",{"_index":1049,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1293,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1412,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1371,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1410,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1331,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1245,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1246,"title":{},"body":{"license.html":{}}}],["tree",{"_index":611,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["trouble",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":1026,"title":{},"body":{"index.html":{}}}],["true",{"_index":334,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":1177,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":1170,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":1106,"title":{},"body":{"index.html":{}}}],["two",{"_index":124,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["type/node",{"_index":1175,"title":{},"body":{"index.html":{}}}],["types",{"_index":1251,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":1181,"title":{},"body":{"index.html":{}}}],["typo",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":188,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1209,"title":{},"body":{"license.html":{}}}],["underscore",{"_index":559,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["union",{"_index":1204,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1399,"title":{},"body":{"license.html":{}}}],["unset",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1148,"title":{},"body":{"index.html":{}}}],["update",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":135,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":537,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["url(this.geturl",{"_index":538,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":535,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":548,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":552,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":550,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":553,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urls",{"_index":158,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["use",{"_index":97,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":24,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["used",{"_index":1095,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":1120,"title":{},"body":{"index.html":{}}}],["useless",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":1017,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":190,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":1441,"title":{},"body":{"license.html":{}}}],["value",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valueprovider",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":632,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["variable",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1536,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1284,"title":{},"body":{"license.html":{}}}],["verify",{"_index":337,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["version",{"_index":688,"title":{},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["version.json",{"_index":489,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":1064,"title":{},"body":{"index.html":{}}}],["void",{"_index":329,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["w3c",{"_index":241,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["w3ctracecontext",{"_index":1086,"title":{},"body":{"index.html":{}}}],["w3ctracecontextpropagator",{"_index":665,"title":{},"body":{"injectables/W3CTraceContextPropagatorService.html":{}}}],["w3ctracecontextpropagatormodule",{"_index":663,"title":{"modules/W3CTraceContextPropagatorModule.html":{}},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["w3ctracecontextpropagatorservice",{"_index":235,"title":{"injectables/W3CTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["wait",{"_index":146,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["want",{"_index":1141,"title":{},"body":{"index.html":{}}}],["warn",{"_index":1116,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1027,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1429,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1423,"title":{},"body":{"license.html":{}}}],["web",{"_index":363,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["webtracer.component",{"_index":648,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.component.ts",{"_index":614,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["webtracer.component.ts:13",{"_index":621,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.component.ts:25",{"_index":622,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.module.ts",{"_index":645,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.module.ts:34",{"_index":646,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer/otel",{"_index":613,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["webtracerprovider",{"_index":348,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":1382,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1219,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1269,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":555,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":1307,"title":{},"body":{"license.html":{}}}],["without",{"_index":1152,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1252,"title":{},"body":{"license.html":{}}}],["works",{"_index":947,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":1312,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1302,"title":{},"body":{"license.html":{}}}],["written",{"_index":1285,"title":{},"body":{"license.html":{}}}],["x",{"_index":1089,"title":{},"body":{"index.html":{}}}],["xml",{"_index":1038,"title":{},"body":{"index.html":{}}}],["xmlhttprequestinstrumentation",{"_index":1102,"title":{},"body":{"index.html":{}}}],["xray",{"_index":8,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["xsrf",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":1154,"title":{},"body":{"index.html":{}}}],["yes",{"_index":592,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["you're",{"_index":1104,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1513,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":150,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["zipkincollectorconfig",{"_index":151,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":172,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":672,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":679,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":667,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":669,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone",{"_index":351,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["zone.js",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["zonecontextmanager",{"_index":347,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["zoom",{"_index":641,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AwsXrayPropagatorModule.html":{"url":"modules/AwsXrayPropagatorModule.html","title":"module - AwsXrayPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsXrayPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\nimport { AwsXrayPropagatorService } from './aws-xray-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: AwsXrayPropagatorService }\n  ]\n})\nexport class AwsXrayPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsXrayPropagatorService.html":{"url":"injectables/AwsXrayPropagatorService.html","title":"injectable - AwsXrayPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsXrayPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AwsXrayPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an AwsXrayPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as AwsXrayPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { AWSXRayPropagator } from '@opentelemetry/propagator-aws-xray';\n/**\n * AwsXrayPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AwsXrayPropagatorService implements IPropagator {\n  /**\n   * Return an AwsXrayPropagator\n   *\n   * @return TextMapPropagator as AwsXrayPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new AWSXRayPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            multiHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        defineB3Encoding\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:43\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:55\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        b3PropagatorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         B3PropagatorConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                        \n                    \n\n            \n                \n                    B3PropagatorConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * B3PropagatorConfig\n   */\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   *\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   *\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatchSpanProcessorConfig.html":{"url":"interfaces/BatchSpanProcessorConfig.html","title":"interface - BatchSpanProcessorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BatchSpanProcessorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                BatchSpanExporter Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            exportTimeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxExportBatchSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxQueueSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scheduledDelayMillis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportTimeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exportTimeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How long the export can run before it is cancelled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxExportBatchSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxExportBatchSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxQueueSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxQueueSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum queue size. After the size is reached spans are dropped.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduledDelayMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scheduledDelayMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The interval between two consecutive exports\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            console\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            probabilitySampler\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            production\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resourceAttributes\n                                        \n                                \n                                \n                                        \n                                            serviceName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log or not body response in span\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     DiagLogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiagLogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log level for opentelemetry\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resourceAttributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resourceAttributes:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    resourceAttributes: Extra resource attribute like service.namespace ...\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class  CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, w3cTraceContextPropagatorService: W3CTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService, awsXrayPropagatorService: AwsXrayPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        w3cTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        W3CTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsXrayPropagatorService\n                                                  \n                                                        \n                                                                        AwsXrayPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:35\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { W3CTraceContextPropagatorService } from '../w3c-trace-context-propagator/w3c-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\nimport { AwsXrayPropagatorService } from '../aws-xray-propagator/aws-xray-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(W3CTraceContextPropagatorService)\n    private w3cTraceContextPropagatorService: W3CTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService,\n    @Inject(AwsXrayPropagatorService)\n    private awsXrayPropagatorService: AwsXrayPropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   *\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.w3cTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n        this.awsXrayPropagatorService.getPropagator()\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:18\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomSpan.html":{"url":"interfaces/CustomSpan.html","title":"interface - CustomSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface Injected in HttpInterceptor to add attributes in a Span.\nImplements this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts:16\n                \n            \n\n\n            \n                \n                    To add Attributes in a Span during interception.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpRequest\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpResponse\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Span } from '@opentelemetry/api';\n\n/**\n * Interface Injected in HttpInterceptor to add attributes in a Span.\n * Implements this interface\n */\nexport interface CustomSpan {\n  /**\n   * To add Attributes in a Span during interception.\n   *\n   * @param span Span\n   * @param request an HttpRequest\n   * @param response an HttpResponse\n   */\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getExporter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTEL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getPropagator\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   *\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTEL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IgnoreUrlsConfig.html":{"url":"interfaces/IgnoreUrlsConfig.html","title":"interface - IgnoreUrlsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IgnoreUrlsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for IgnoreUrlsConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            urls\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        urls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        urls:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    URLs that partially match any regex in ignoreUrls will not be traced.\nIn addition, URLs that are exact matches of strings in ignoreUrls will\nalso not be traced.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstrumentationService.html":{"url":"injectables/InstrumentationService.html","title":"injectable - InstrumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstrumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                InstrumentationService.\nService for component to add instrumentation.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contextManager\n                            \n                            \n                                    Private\n                                tracerProvider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Public\n                                initInstrumentation\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertOrNotSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                    Private\n                                loadResourceAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, instrumentationOptions: InstrumentationOption[])\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        instrumentationOptions\n                                                  \n                                                        \n                                                                    InstrumentationOption[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:141\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:151\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initInstrumentation\n                        \n                    \n                \n            \n            \n                \n                    \n                    initInstrumentation()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:63\n                \n            \n\n\n            \n                \n                    Init instrumentation on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:109\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertOrNotSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOrNotSpanExporter(production: boolean, exporter: IExporter, console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:95\n                \n            \n\n\n            \n                \n                    Verify to insert or not a Span Exporter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, exporter: IExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:124\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadResourceAttributes\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadResourceAttributes(commonConfig: CommonCollectorConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:80\n                \n            \n\n\n            \n                \n                    Generate Resource Attributes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commonConfig\n                                    \n                                                CommonCollectorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Resource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ZoneContextManager()\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:38\n                        \n                    \n\n            \n                \n                    contextManager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tracerProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:33\n                        \n                    \n\n            \n                \n                    tracerProvider\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ZoneContextManager } from '@opentelemetry/context-zone-peer-dep';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentationOption, registerInstrumentations } from '@opentelemetry/instrumentation';\nimport {\n  AlwaysOffSampler,\n  AlwaysOnSampler,\n  ParentBasedSampler,\n  Sampler,\n  TraceIdRatioBasedSampler,\n  WebTracerProvider\n} from '@opentelemetry/sdk-trace-web';\nimport { ConsoleSpanExporter, SimpleSpanProcessor, BatchSpanProcessor, NoopSpanProcessor } from '@opentelemetry/sdk-trace-base';\n// eslint-disable-next-line max-len\nimport { OTEL_CONFIG, OpenTelemetryConfig, OTEL_INSTRUMENTATION_PLUGINS, CommonCollectorConfig } from '../../configuration/opentelemetry-config';\nimport { OTEL_EXPORTER, IExporter } from '../exporter/exporter.interface';\nimport { OTEL_PROPAGATOR, IPropagator } from '../propagator/propagator.interface';\n\n\n/**\n * InstrumentationService.\n * Service for component to add instrumentation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentationService {\n\n  /**\n   * tracerProvider\n   */\n  private tracerProvider: WebTracerProvider;\n\n  /**\n   * contextManager\n   */\n  private contextManager = new ZoneContextManager();\n\n  /**\n   * Constructor\n   *\n   * @param config\n   * @param exporterService\n   * @param propagatorService\n   */\n  constructor(@Inject(OTEL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTEL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTEL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Inject(OTEL_INSTRUMENTATION_PLUGINS)\n    private instrumentationOptions: InstrumentationOption[]) {\n    this.tracerProvider = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(this.config.commonConfig.probabilitySampler)),\n      resource: this.loadResourceAttributes(this.config.commonConfig),\n    });\n  }\n\n  /**\n   * Init instrumentation on init\n   */\n  public initInstrumentation() {\n    this.insertOrNotSpanExporter(this.config.commonConfig.production, this.exporterService, this.config.commonConfig.console);\n\n    this.tracerProvider.register({\n      contextManager: this.contextManager,\n      propagator: this.propagatorService.getPropagator()\n    });\n\n    registerInstrumentations({\n      instrumentations: this.instrumentationOptions,\n      tracerProvider: this.tracerProvider,\n    });\n  }\n\n  /**\n   * Generate Resource Attributes\n   */\n  private loadResourceAttributes(commonConfig: CommonCollectorConfig): Resource {\n    let resourceAttributes = Resource.default().merge(\n      new Resource({\n        [SemanticResourceAttributes.SERVICE_NAME]: commonConfig.serviceName,\n      })\n    );\n    if (commonConfig.resourceAttributes !== undefined) {\n      resourceAttributes = resourceAttributes.merge(new Resource(commonConfig.resourceAttributes));\n    }\n    return resourceAttributes;\n  }\n\n  /**\n   * Verify to insert or not a Span Exporter\n   */\n  private insertOrNotSpanExporter(production: boolean, exporter: IExporter, console: boolean) {\n    if (this.exporterService.getExporter() !== undefined) {\n      this.insertSpanProcessorProductionMode(production, exporter);\n      this.insertConsoleSpanExporter(console);\n    } else {\n      this.tracerProvider.addSpanProcessor(new NoopSpanProcessor());\n    }\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   *\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracerProvider.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   *\n   * @param boolean production\n   * @param IExporter exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    exporter: IExporter\n  ) {\n    this.tracerProvider.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(exporter.getExporter())\n        : new SimpleSpanProcessor(exporter.getExporter())\n    );\n  }\n\n  /**\n   * convert String to Number (or undefined)\n   *\n   * @param value\n   * @returns number or undefined\n   */\n  private convertStringToNumber(value: string): number {\n    return value !== undefined ? Number(value) : undefined;\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an JaegerPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerPropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                        \n                    \n\n            \n                \n                    custom Header\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerPropagator } from '@opentelemetry/propagator-jaeger';\nimport { OTEL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerPropagator\n   *\n   * @return TextMapPropagator as JaegerPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerPropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopSpanExporterModule.html":{"url":"modules/NoopSpanExporterModule.html","title":"module - NoopSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopSpanExporterService } from './noop-span-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: NoopSpanExporterService }\n  ]\n})\nexport class NoopSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopSpanExporterService.html":{"url":"injectables/NoopSpanExporterService.html","title":"injectable - NoopSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoopSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopSpanExporterService\nA No-op span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts:18\n                \n            \n\n\n            \n                \n                    Return undefined\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * NoopSpanExporterService\n * A No-op span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopSpanExporterService implements IExporter {\n  /**\n   * Return undefined\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return null\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return null\n   *\n   * @return TextMapPropagator as null\n   */\n  getPropagator(): TextMapPropagator {\n    return null;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            b3PropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchSpanProcessorConfig\n                                        \n                                \n                                \n                                        \n                                            commonConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ignoreUrls\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jaegerPropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            otelcolConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zipkinConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSpanProcessorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchSpanProcessorConfig:         BatchSpanProcessorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BatchSpanProcessorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    batchSpanProcessorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ignoreUrls:         IgnoreUrlsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IgnoreUrlsConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ignoreUrls\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                logBody\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertOrNotSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                loadResourceAttributes\n                            \n                            \n                                    Private\n                                setCustomSpan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, logger: DiagLogger, customSpan: CustomSpan, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:62\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator injected\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    DiagLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                define logger\n\n                                                        \n                                                \n                                                \n                                                        customSpan\n                                                  \n                                                        \n                                                                        CustomSpan\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customSpan interface to add attributes\n\n                                                        \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                encapsulates all calls to DOM APIs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:298\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:281\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:161\n                \n            \n\n\n            \n                \n                    Get current scheme, hostname and port\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:185\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        injectContextAndHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:217\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:249\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertOrNotSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOrNotSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:237\n                \n            \n\n\n            \n                \n                    Verify to insert or not a Span Exporter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:261\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:107\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadResourceAttributes\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadResourceAttributes(commonConfig: CommonCollectorConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:168\n                \n            \n\n\n            \n                \n                    Generate Resource Attributes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commonConfig\n                                    \n                                                CommonCollectorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Resource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setCustomSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCustomSpan(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:310\n                \n            \n\n\n            \n                \n                    Set custom attributes in span with a CustomSpan\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        Span\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StackContextManager\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:58\n                        \n                    \n\n            \n                \n                    context manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:62\n                        \n                    \n\n            \n                \n                    Log or not body\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tracer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:54\n                        \n                    \n\n            \n                \n                    tracer\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { PlatformLocation } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Span, SpanStatusCode, DiagLogger, SpanKind } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/sdk-trace-web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  NoopSpanProcessor,\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n  Sampler,\n  BufferConfig\n} from '@opentelemetry/sdk-trace-base';\nimport {\n  isUrlIgnored\n} from '@opentelemetry/core';\nimport { SemanticResourceAttributes, SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  CommonCollectorConfig,\n  OpenTelemetryConfig,\n  OTEL_CONFIG,\n} from '../configuration/opentelemetry-config';\nimport infoLibrary from '../../version.json';\nimport { OTEL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTEL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\nimport { OTEL_LOGGER, OTEL_CUSTOM_SPAN } from '../configuration/opentelemetry-config';\nimport { CustomSpan } from './custom-span.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n  /**\n   * Log or not body\n   */\n  logBody = false;\n\n  /**\n   * constructor\n   *\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator injected\n   * @param logger define logger\n   * @param customSpan a customSpan interface to add attributes\n   * @param platformLocation encapsulates all calls to DOM APIs\n   */\n  constructor(\n    @Inject(OTEL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTEL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTEL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Optional() @Inject(OTEL_LOGGER)\n    private logger: DiagLogger,\n    @Optional() @Inject(OTEL_CUSTOM_SPAN)\n    private customSpan: CustomSpan,\n    private platformLocation: PlatformLocation\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(config.commonConfig.probabilitySampler)),\n      resource: this.loadResourceAttributes(this.config.commonConfig),\n    });\n    this.insertOrNotSpanExporter();\n    this.contextManager = new StackContextManager();\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n      contextManager: this.contextManager\n    });\n    this.logBody = config.commonConfig.logBody;\n    api.diag.setLogger(logger, config.commonConfig.logLevel);\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   *\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    if (isUrlIgnored(request.url, this.config.ignoreUrls?.urls)) {\n      return next.handle(request);\n    }\n    this.contextManager.disable(); //FIX - reinit contextManager for each http call\n    this.contextManager.enable();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          if (this.logBody && event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: SpanStatusCode.UNSET\n          });\n          this.setCustomSpan(span, request, event);\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR\n          });\n          this.setCustomSpan(span, request, event);\n        }\n      ),\n      finalize(() => {\n        span.end();\n        this.contextManager.disable();\n      })\n    );\n  }\n\n  /**\n   * Get current scheme, hostname and port\n   */\n  private getURL() {\n    return this.platformLocation.href;\n  }\n\n  /**\n   * Generate Resource Attributes\n   */\n  private loadResourceAttributes(commonConfig: CommonCollectorConfig): Resource {\n    let resourceAttributes = Resource.default().merge(\n      new Resource({\n        [SemanticResourceAttributes.SERVICE_NAME]: commonConfig.serviceName\n      })\n    );\n    if (commonConfig.resourceAttributes !== undefined) {\n      resourceAttributes = resourceAttributes.merge(new Resource(commonConfig.resourceAttributes));\n    }\n    return resourceAttributes;\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   *\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = (request.urlWithParams.startsWith('http')) ? new URL(request.urlWithParams) : new URL(this.getURL());\n    const span = this.tracer\n      .getTracer(infoLibrary.name, infoLibrary.version)\n      .startSpan(\n        `${request.method.toUpperCase()}`,\n        {\n          attributes: {\n            [SemanticAttributes.HTTP_METHOD]: request.method,\n            [SemanticAttributes.HTTP_URL]: request.urlWithParams,\n            [SemanticAttributes.HTTP_HOST]: urlRequest.host,\n            [SemanticAttributes.HTTP_SCHEME]: urlRequest.protocol.replace(':', ''),\n            [SemanticAttributes.HTTP_TARGET]: urlRequest.pathname + urlRequest.search,\n            [SemanticAttributes.HTTP_USER_AGENT]: window.navigator.userAgent\n          },\n          kind: SpanKind.CLIENT,\n        },\n        this.contextManager.active()\n      );\n    /*eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_currentContext\"] }]*/\n    this.contextManager._currentContext = api.trace.setSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   *\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      this.contextManager.active(),\n      carrier,\n      api.defaultTextMapSetter\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Verify to insert or not a Span Exporter\n   */\n  private insertOrNotSpanExporter() {\n    if (this.exporterService.getExporter() !== undefined) {\n      this.insertSpanProcessorProductionMode();\n      this.insertConsoleSpanExporter();\n    } else {\n      this.tracer.addSpanProcessor(new NoopSpanProcessor());\n    }\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   */\n  private insertConsoleSpanExporter() {\n    if (this.config.commonConfig.console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   */\n  private insertSpanProcessorProductionMode() {\n    const bufferConfig: BufferConfig = {\n      maxExportBatchSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxExportBatchSize),\n      scheduledDelayMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.scheduledDelayMillis),\n      exportTimeoutMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.exportTimeoutMillis),\n      maxQueueSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxQueueSize)\n    };\n    this.tracer.addSpanProcessor(\n      this.config.commonConfig.production\n        ? new BatchSpanProcessor(this.exporterService.getExporter(), bufferConfig)\n        : new SimpleSpanProcessor(this.exporterService.getExporter())\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig , response: HttpResponse | HttpErrorResponse): Span {\n    return this.customSpan != null ? this.customSpan.add(span, request, response) : span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig | null | undefined, configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configProvider\n                                    \n                                            ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n  ValueProvider,\n  ClassProvider,\n  ConstructorProvider,\n  ExistingProvider,\n  FactoryProvider,\n} from '@angular/core';\nimport {\n  defineConfigProvider,\n  OpenTelemetryConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(\n    config: OpenTelemetryConfig | null | undefined,\n    configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n    ): ModuleWithProviders {\n\n      //Interceptor\n      const interceptorProvider = {\n        provide: HTTP_INTERCEPTORS,\n        useClass: OpenTelemetryHttpInterceptor,\n        multi: true,\n      };\n\n      configProvider = defineConfigProvider(config,configProvider);\n\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        configProvider,\n        interceptorProvider,\n      ],\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: OtelcolExporterService },\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            concurrencyLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        concurrencyLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concurrencyLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An optional limit on pending requests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum time the OTLP exporter will wait for each batch export.\nThe default value is 10000ms.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:4318/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OtelWebTracerComponent.html":{"url":"components/OtelWebTracerComponent.html","title":"component - OtelWebTracerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OtelWebTracerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Otel Web Tracer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                otel-instrumentation\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(instrumentationService: InstrumentationService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instrumentationService\n                                                  \n                                                        \n                                                                        InstrumentationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                InstrumentationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:25\n                \n            \n\n\n            \n                \n                    Init Component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InstrumentationService } from '../../services/instrumentation/instrumentation.service';\n\n\n/**\n * Otel Web Tracer Component\n */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'otel-instrumentation',\n  template: '',\n})\nexport class OtelWebTracerComponent implements OnInit {\n\n  /**\n   * Constructor\n   *\n   * @param instrumentationService InstrumentationService\n   */\n  constructor(private instrumentationService: InstrumentationService) { }\n\n  /**\n   * Init Component\n   */\n  ngOnInit(): void {\n   this.instrumentationService.initInstrumentation();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'OtelWebTracerComponent', 'selector': 'otel-instrumentation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OtelWebTracerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelWebTracerModule.html":{"url":"modules/OtelWebTracerModule.html","title":"module - OtelWebTracerModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelWebTracerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig | null | undefined, configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configProvider\n                                    \n                                            ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  ClassProvider,\n  ConstructorProvider,\n  ExistingProvider,\n  FactoryProvider,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n  ValueProvider,\n} from '@angular/core';\nimport {\n  defineConfigProvider,\n  OpenTelemetryConfig,\n} from './configuration/opentelemetry-config';\nimport { OtelWebTracerComponent } from './component/otel-webtracer/otel-webtracer.component';\nimport { InstrumentationService } from './services/instrumentation/instrumentation.service';\n\n@NgModule({\n  declarations: [OtelWebTracerComponent],\n  exports: [OtelWebTracerComponent]\n})\nexport class OtelWebTracerModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OtelWebTracerModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OtelWebTracerModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(\n    config: OpenTelemetryConfig | null | undefined,\n    configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ModuleWithProviders {\n\n    configProvider = defineConfigProvider(config,configProvider);\n\n    return {\n      ngModule: OtelWebTracerModule,\n      providers: [\n        configProvider,\n        InstrumentationService\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:44\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        otelcolConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OTLPExporterConfigBase\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                        \n                    \n\n            \n                \n                    CollectorExporterConfigBase\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG\n} from '../../../configuration/opentelemetry-config';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http';\nimport { OTLPExporterConfigBase } from '@opentelemetry/otlp-exporter-base';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: OTLPExporterConfigBase;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(OTEL_CONFIG) config: OpenTelemetryConfig\n  ) {\n    this.otelcolConfig = {\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      concurrencyLimit: Number(config.otelcolConfig?.concurrencyLimit),\n      timeoutMillis: Number(config.otelcolConfig?.timeoutMillis)\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   *\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new OTLPTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/W3CTraceContextPropagatorModule.html":{"url":"modules/W3CTraceContextPropagatorModule.html","title":"module - W3CTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    W3CTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { W3CTraceContextPropagatorService } from './w3c-trace-context-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: W3CTraceContextPropagatorService }\n  ]\n})\nexport class W3CTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/W3CTraceContextPropagatorService.html":{"url":"injectables/W3CTraceContextPropagatorService.html","title":"injectable - W3CTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  W3CTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                W3CTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts:18\n                \n            \n\n\n            \n                \n                    Return an W3CTraceContextPropagatorService\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as W3CTraceContextPropagatorService\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { W3CTraceContextPropagator } from '@opentelemetry/core';\n\n/**\n * W3CTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class W3CTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an W3CTraceContextPropagatorService\n   *\n   * @return TextMapPropagator as W3CTraceContextPropagatorService\n   */\n  getPropagator(): TextMapPropagator {\n    return new W3CTraceContextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OTEL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:36\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        zipkinConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExporterConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                        \n                    \n\n            \n                \n                    zipkinConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { OpenTelemetryConfig, OTEL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter, ExporterConfig } from '@opentelemetry/exporter-zipkin';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  /**\n   * zipkinConfig\n   */\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n1.4.1-2 (2023-05-23)\n1.4.1-1 (2023-05-05)\nBug Fixes\n\nhttp span name semantic (#154) (de50104)\n\n1.4.1 (2023-03-28)\n1.4.0-1 (2023-03-18)\nFeatures\n\n#156: add resource attributes configuration (#157) (64ab01a), closes #156\n\nBug Fixes\n\n#151: add ignoreUrls configuration (26a2e27), closes #151\n\n1.4.0 (2023-02-10)\n1.3.0-1 (2022-12-31)\nBug Fixes\n\nbad url in readme (640d901)\ndeprecated package (8442349)\nreadme (24f4d6f)\nremove NoopTextMapPropagator (7f3aba9)\n\n1.3.0 (2022-12-18)\n1.2.0-1 (2022-09-25)\nBug Fixes\n\npeerDependencies (5a29d29)\n\n1.2.0 (2022-09-02)\nBug Fixes\n\nupdate api (7023a31)\n\n1.1.0-2 (2022-07-19)\nFeatures\n\nadd config to ignore urls in interceptor (6763f97)\n\nBug Fixes\n\nimport isUrlIgnored (c36e295)\n\n1.1.0-1 (2022-06-22)\nBug Fixes\n\nremove useless os dependence (97579f0)\n\n1.1.0 (2022-05-27)\nFeatures\n\nremove instrumentation plugin and rename token (#106) (59ac6ca)\n\nBug Fixes\n\npackage-lock.json (e9dc64b)\n\n1.0.1 (2021-12-03)\nFeatures\n\nadd config provider for external config (7bbaf2e)\nadd example in instrumentation (e29c839)\n\n1.0.0 (2021-11-09)\n0.25.0-2 (2021-10-24)\nBug Fixes\n\nreview aws propagator integration (4fcec62)\ntest (3ae307e)\n\n0.25.0-1 (2021-10-01)\nBug Fixes\n\nissue#80: old reference package (ee08e85), closes issue#80\n\n0.25.0 (2021-09-17)\nFeatures\n\nupdate collector and add new default http port collector (4318) (5a7c375)\n\nBug Fixes\n\nadd test for instrumentation (23e35d1)\npeer dependencies version number (41c8947)\nreturn to 0.24.0 in document-load to release (1f22380)\n\n0.24.0-1 (2021-08-04)\nBug Fixes\n\nbad version on peerDependencies (c2b4209)\n\n0.24.0 (2021-08-01)\n0.23.0 (2021-07-08)\n0.22.0 (2021-06-17)\nBug Fixes\n\nreadme (a6307f2)\n\n0.21.0 (2021-06-11)\n0.20.0 (2021-06-07)\nFeatures\n\nadd concurencyLimit (40f33cc)\n\nBug Fixes\n\nspan.kind to client value and status.code to unset (#51) (b3e15af)\nissue#41: add custom dynamic span attributes (1c7c0c0), closes issue#41\n\n0.19.0 (2021-05-03)\nFeatures\n\ncomponent with instrumentation (#34) (caab7a9)\nissue#38: add batchSpanProcessorConfig (a73e382), closes issue#38\nissue#38: add batchSpanProcessorConfig (dbaec60), closes issue#38\n\nBug Fixes\n\nissue#4: link error on documentation (2965c35), closes issue#4\nissue#42: restart context for each http call (c9f8667), closes issue#42\napi breaking change (don't forget in changelog...) (18d04fd)\ncypress test error on span name (68d7aee)\ngithub action rename branch main (66ca86c)\nuse protocol and method for span name (1a56037)\n\n0.18.2 (2021-03-30)\nFeatures\n\nupdate to 0.18.2 (d8b9f3c)\n\n0.18.0-1 (2021-03-26)\n0.18.0 (2021-03-10)\nFeatures\n\nupdate to version 0.18.0 (ead3251)\n\nBug Fixes\n\nerror package-lock (c53447a)\n\n0.17.0 (2021-02-21)\nBug Fixes\n\nreadme error opentelemtery (0615f02)\n\n0.16.0 (2021-02-02)\nFeatures\n\nupdate to 0.16.0 opentelemetry-js (f0a18ea)\n\n0.15.0 (2021-01-28)\n0.14.0 (2020-12-18)\nFeatures\n\nadd log body configurable (332baf7)\nupdate angular 10.2 (efa9083)\nupdate opentelemetry-js 0.14.0 (dcde5bb)\n\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9)\n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n            \n            component\n            OtelWebTracerComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            BatchSpanProcessorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            IgnoreUrlsConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            defineConfigProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_CUSTOM_SPAN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_INSTRUMENTATION_PLUGINS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n            \n            interface\n            CustomSpan\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTEL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts\n            \n            injectable\n            NoopSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n            \n            injectable\n            InstrumentationService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n            \n            injectable\n            AwsXrayPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTEL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n            \n            injectable\n            W3CTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/core : ^13.3.10\n        \n            @angular/animations : ^13.3.12\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ^13.3.12\n        \n            @angular/compiler : ^13.3.12\n        \n            @angular/core : ^13.3.12\n        \n            @angular/forms : ^13.3.12\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ^13.3.12\n        \n            @angular/platform-browser-dynamic : ^13.3.12\n        \n            @angular/router : ^13.3.12\n        \n            ngx-highlight-js : ^13.0.0\n        \n            ngx-logger : 5.0.12\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nUse Angular >= 13.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nContent\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nBatchSpanProcessor Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\nIgnore URL Configuration\nExternal Configuration\n\n\nAngular module\nCommons Module\nExporter module\nPropagator module\n\n\nInterceptor Module\nInstrumentation Module\nInterceptor Module And Instrumentation Module\nInjection token\n\n\nComponent otel-instrumentation\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n(Optional) Add span attributes during interception\n\n\nHow it works\nExample\nRun\nInterceptor\nInstrumentation\n\n\n[Optional] Result in OpenTelemetry-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nContent\nThis library offers two possibilities to use it in Angular App : \n\nInterceptor : catch every external call with the HttpClient from angular\nInstrumentation : use instrumentation from opentelemetry-js with web plugins (You need to install and configure it) like : \n@opentelemetry/instrumentation-document-load\n@opentelemetry/instrumentation-fetch\n@opentelemetry/instrumentation-xml-http-request\n...\n\n\n\nInstallation\nWith npm :\nnpm i @jufab/opentelemetry-angular-interceptorConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n  ignoreUrls?: IgnoreUrlsConfig;\n}Example global Configuration\nFrom the interceptor-example\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      logBody: true, //(boolean) true add body in a log, nothing otherwise\n      serviceName: 'interceptor-example', //Service name send in trace\n      resourceAttributes: { // extra resource attributes like service.namespace\n        [SemanticResourceAttributes.SERVICE_NAMESPACE]: 'namespace'\n      },\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n      logLevel:DiagLogLevel.ALL //(Enum) DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    batchSpanProcessorConfig: { //Only if production = true in commonConfig\n      maxQueueSize: '2048', // The maximum queue size. After the size is reached spans are dropped.\n      maxExportBatchSize: '512', // The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n      scheduledDelayMillis: '5000', // The interval between two consecutive exports\n      exportTimeoutMillis: '30000', // How long the export can run before it is cancelled\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }From the instrumentation-example\nbackendApp.get('/api/config', (req,res) => {\n  return res.status(200).send({\n    commonConfig: {\n      console: true, // Display trace on console\n      production: true, // Send Trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      serviceName: 'instrumentation-example', // Service name send in trace\n      resourceAttributes: { // extra resource attributes like service.namespace\n        'service.namespace': 'namespace'\n      },\n      probabilitySampler: '0.75', // 75% sampling\n      logLevel: 99 //ALL Log, DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', // URL of opentelemetry collector\n    }\n  });\n})\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nresourceAttributes: list of extra resource attributes\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\nlogBody: (boolean) true add body in a log, nothing otherwise\nlogLevel: (DiagLogLevel) log level\n\nBatchSpanProcessor Configuration\nThis configuration applies if production is true in commonConfig.\n\nmaxQueueSize: (string) The maximum queue size. After the size is reached spans are dropped.\nmaxExportBatchSize: (string) The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\nscheduledDelayMillis: (string) The interval between two consecutive exports\nexportTimeoutMillis: (string) How long the export can run before it is cancelled\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:4318/v1/traces)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\nconcurrencyLimit (string) : An optional limit on pending requests (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\ntimeoutMillis (string): Maximum time the OTLP exporter will wait for each batch export. The default value is 10000ms (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-b3)\n\nIgnore URL Configuration\n\nurls : (Array) URLs that partially match any regex in ignoreUrls will not be traced. In addition, URLs that are exact matches of strings in ignoreUrls will also not be traced\n\nExternal Configuration\nInstrumentation example project have an external configuration to show how you can do it.\nAngular module\nYou need 3 modules to add to your application.\n\nExporter Module : to define type and export of traces.\nPropagator Module : to define propagation in your HTTP header.\nLast Module, 2 choices :  \nOpenTelemetryInterceptorModule : to activate interceptor in all your http call.\nOtelWebTracerModule : to activate instrumentation (you need a component to activate it, see Component otel-instrumentation).\n\n\n\nCommons Module\nYou add this modules in your application module (generally app.module.ts)\nExporter module\nThere is 4 exporters:\n\nNoopSpanExporterModule : This a fake exporter\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 6 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nW3CTraceContextPropagatorModule : Use W3CTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\nAwsXrayPropagatorModule : Use AWS X-Ray propagator\nCompositePropagatorModule : use all of the propagator\n\nInterceptor Module\nJust add OpenTelemetryInterceptorModule to insert Interceptor\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}Instrumentation Module\nDeclare this OtelWebTracerModule to configure instrumentation.\nYou need to provide Web instrumentation on the OTEL_INSTRUMENTATION_PLUGINS token in providers section of NgModule\nExample in instrumentation-example project\n...\nimport { OtelColExporterModule, CompositePropagatorModule, OtelWebTracerModule } from 'projects/opentelemetry-interceptor/src/public-api';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    // OtelCol Exporter Module\n    OtelColExporterModule,\n    // Composite Propagator Module\n    CompositePropagatorModule,\n    // OtelWebTracerModule to configure instrumentation component.\n    OtelWebTracerModule.forRoot(environment.openTelemetryConfig),\n    ...\n  ],\n  providers: [\n    {provide: OTEL_INSTRUMENTATION_PLUGINS, useValue: [new XMLHttpRequestInstrumentation()]}\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\nInterceptor Module And Instrumentation Module\nDon't use them at the same time : you're going to have the same trace twice.\nInjection token\nThis library exposes injection token.\nYou can use them to override or customize. \n\nOTEL_EXPORTER : token to inject an implementation of IExporter\nOTEL_PROPAGATOR : token to inject an implementation of IPropagator\nOTEL_CONFIG : token to inject an OpenTelemetryConfig\nOTEL_INSTRUMENTATION_PLUGINS : token to inject an InstrumentationOption array\nOTEL_LOGGER : more info in (Optional) Logging in OtelColExporterModule\nOTEL_CUSTOM_SPAN : more infor in (Optional) Add span attributes during interception\n\nComponent otel-instrumentation\nA component named otel-instrumentation must be add in your application.\nIn instrumentation-example, this component is in app.component.html like this :\n...\n\n...there is no configuration/directive need : all is in OtelWebTracerModule\n(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTEL_LOGGER token.\nYou can use a custom logger which implements the DiagLogger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTEL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTEL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]Don't forget to set \"logLevel\" in Common Configuration (Level must be the same between NGXLogger and common configuration)\n\nYou can see an example in the interceptor-example.\n\n(Optional) Add span attributes during interception\nThis option is only available for Interceptor Module\nImplement a CustomSpan and the method add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span\n\nspan : Current span, you can set or get attributes\nrequest : Current request in interceptor\nresponse : Current response in interceptor\n\nImplement CustomSpan class like : \nclass CustomSpanImpl implements CustomSpan {\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span {\n    span.setAttribute('mycustom.key', request.params + \";\" + response.status);\n    return span;\n  }\n}Inject it in you App module with OTEL_CUSTOM_SPAN :\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTEL_CUSTOM_SPAN, useClass: CustomSpanImpl }\n    ...\n  ]\nYou can see an example in the interceptor-example.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project has two example Angular Application:\n\nprojects/interceptor-example\nprojects/instrumentation-example\n\nYou can see how configure and insert all modules.\nYou can althought test opentelemetry-angular-interceptor with this two applications.\nRun\nInterceptor\nTo start this Interceptor example application, run command :\nnpm run start:complete-interceptor-exampleand open the application at http://localhost:4200\nInstrumentation\nTo start this Instrumentation example application, run command :\nnpm run start:complete-instrumentation-exampleand open the application at http://localhost:4200\n[Optional] Result in OpenTelemetry-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/exporter-zipkin\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\",\n    \"@opentelemetry/instrumentation\",\n    \"@opentelemetry/instrumentation-xml-http-request\",\n    \"@opentelemetry/instrumentation-document-load\",\n    \"@opentelemetry/instrumentation-fetch\",\n    \"@opentelemetry/context-zone-peer-dep\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AwsXrayPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelWebTracerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        W3CTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.4.1-2\n        \n            Homepage : https://github.com/jufab/opentelemetry-angular-interceptor\n        \n            Author : Julien Fabre\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add more configuration for OpenTelemetry-collector : See here  \n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here\n\n\n Prepare baggage here\n\nIn Progress\nDone ✓\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defineConfigProvider   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_CONFIG   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_CUSTOM_SPAN   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTEL_INSTRUMENTATION_PLUGINS   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defineConfigProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('opentelemetry.config')\n                    \n                \n\n            \n                \n                    OTEL_CONFIG : Config injection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_CUSTOM_SPAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.custom-span')\n                    \n                \n\n            \n                \n                    custom span\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_INSTRUMENTATION_PLUGINS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.instrumentation.plugins')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.logger')\n                    \n                \n\n            \n                \n                    Logger : injection for a logger compatible\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTEL_EXPORTER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.exporter')\n                    \n                \n\n            \n                \n                    injection for a Exporter\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTEL_PROPAGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.propagator')\n                    \n                \n\n            \n                \n                    injection for a propagator\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
